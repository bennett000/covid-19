{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./i18n lazy ^\\.\\/.*\\.json$ namespace object","webpack:///./node_modules/preact/dist/preact.module.js","webpack:///./node_modules/preact-router/dist/preact-router.es.js","webpack:///./src/utility.ts","webpack:///./src/components/chart.tsx","webpack:///./src/constants.ts","webpack:///./node_modules/@ch1/utility/dist/utility.js","webpack:///./src/components/select.tsx","webpack:///./src/components/select-multiple.tsx","webpack:///./src/components/date.tsx","webpack:///./src/components/button.tsx","webpack:///./src/components/string.tsx","webpack:///./src/components/select-multiple-filter.tsx","webpack:///./src/feature-time-vs-counts/time-vs-counts-controls.tsx","webpack:///./src/components/button-toggle.tsx","webpack:///./src/components/menu.tsx","webpack:///./src/feature-time-vs-counts/time-vs-counts.tsx","webpack:///./src/data-maps.ts","webpack:///./src/time-series.ts","webpack:///./src/seir.ts","webpack:///./src/data.ts","webpack:///./src/state.ts","webpack:///./src/feature-learning-table/learning-table.tsx","webpack:///./src/components/header.tsx","webpack:///./src/feature-confirmed-vs-recent/confirmed-vs-recent.tsx","webpack:///./src/components/map.tsx","webpack:///./src/feature-geography/geography.tsx","webpack:///./src/components/about-list.tsx","webpack:///./src/feature-about/about.tsx","webpack:///./src/app.tsx","webpack:///./src/i18n.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","map","webpackAsyncContext","req","Promise","resolve","then","e","Error","code","id","keys","u","a","v","parentNode","removeChild","h","arguments","length","push","children","defaultProps","ref","type","props","__k","__","__b","__e","__d","__c","constructor","vnode","this","context","w","indexOf","g","base","k","debounceRendering","_","sort","__v","some","__P","A","__n","ownerSVGElement","T","b","f","y","appendChild","nextSibling","insertBefore","D","j","Array","isArray","C","setProperty","test","N","style","cssText","replace","toLowerCase","slice","addEventListener","z","removeEventListener","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","event","x","P","contextType","__E","render","E","sub","state","__h","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","__r","getChildContext","getSnapshotBeforeUpdate","$","diffed","nodeType","localName","document","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","innerHTML","checked","current","unmount","componentWillUnmount","H","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","setTimeout","EMPTY$1","obj","exec","url","route","opts","ret","reg","match","matches","split","decodeURIComponent","join","segmentize","max","Math","i$1","charAt","param","flags","plus","star","val","default","pathRankSort","rank","index","prepareVNodeForRanking","path","rankSegment","rankChild","segment","customHistory","ROUTERS","subscribers","EMPTY","getCurrentUrl","location","getCurrentLocation","pathname","search","canRoute","history","setUrl","routeTo","didRoute","routeFromLink","node","getAttribute","href","target","handleLinkClick","ctrlKey","metaKey","altKey","shiftKey","button","currentTarget","prevent","stopImmediatePropagation","stopPropagation","preventDefault","delegateLinkHandler","String","nodeName","toUpperCase","hasAttribute","eventListenersInitialized","Component$$1","Router","__proto__","static","onChange","getMatchingChildren","updating","this$1","unlisten","listen","splice","invoke","filter","newProps","Boolean","ref$1","active","previous","previousUrl","router","Route","component","Link","onClick","isMobile","check","substr","navigator","userAgent","vendor","window","opera","log","args","console","filterStates","doFilter","strings","item","countries","total","super","fn","limit","isRunning","lastArgs","run","message","clearTimeout","debounce","chart","createChart","options","series","JSC","Chart","className","flexSize","fullSize","flex","flexCol","reverseDeathProjectionDefaults","freeze","daysFromInfectionToDeath","doublingTime","fatalityRate","minDeaths","basePalette","projectionPalette","activeRanges","color","confirmedRanges","deathRanges","recoveryRanges","isBoolean","arg","isNumber","thing","isString","noop","objEach","callback","forEach","objReduce","init","reduce","Select","selected","option","SelectMultiple","optClick","results","opt","selectedOptionsToArray","multiple","InputDate","ymdString","Button","classes","isDisabled","label","disabled","InputString","listenKeyUp","placeholder","change","onKeyUp","getOptions","SelectMultipleFilter","givenClasses","onUpdateFilter","onClear","onDeselect","TimeVsCountsControls","clearCountries","countryKeys","onUpdateCountryFilter","reload","selectCountry","selectCountries","dataSets","activeCases","confirmedCases","deaths","recoveries","newConfirmed","newDeaths","estimatedActiveCases","projectionSeirActive","projectionSeirDeaths","projectionSeirRecoveries","modes","byDate","byFirst","byFirst100","scaleTypes","linear","logarithmic","showStates","states","metrics","byValue","byPercent","assign","parseInt","scaleType","startDate","dataSetIndexes","countryFilter","showOrHide","metric","byMetric","timeVsCounts","ButtonToggle","labelFalse","labelTrue","Menu","config","disable","labels","isConfigOpen","xAxis_label_text","useDays","undefined","xAxis","scale","customTicks","month","label_text","week","yAxis_label_text","people","percent","yAxis","legend","template","currentSeries","enlarge","configure","toggleConfig","menu","setCountryFilter","mapJhuCountryToPop","Czechia","Eswatini","Russia","US","manuallySourcePop","Burma","Fiji","Guernsey","Jersey","Kosovo","Libya","Montenegro","Serbia","manuallySourceStatePop","Australia","Queensland","Tasmania","Victoria","Canada","Alberta","Ontario","Manitoba","Quebec","Saskatchewan","Yukon","Nunavut","China","Anhui","Beijing","Chongqing","Fujian","Gansu","Guangdong","Guangxi","Guizhou","Hainan","Hebei","Heilongjiang","Henan","Hubei","Hunan","Jiangsu","Jiangxi","Jilin","Liaoning","Macau","Ningxia","Qinghai","Shaanxi","Shandong","Shanghai","Shanxi","Sichuan","Tianjin","Tibet","Xinjiang","Yunnan","Zhejiang","Denmark","Greenland","France","Guadeloupe","Mayotte","Reunion","Netherlands","Aruba","Curacao","Bermuda","Gibraltar","Montserrat","AL","AK","AZ","AR","CA","CO","CT","DE","DC","FL","GA","GU","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","VI","WA","WV","WI","WY","PR","countriesToCodes","Afghanistan","Albania","Algeria","Andorra","Angola","Anguilla","Antarctica","Argentina","Armenia","Austria","Azerbaijan","Bahamas","Bangladesh","Bahrain","Barbados","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","Botswana","Brazil","Brunei","Bulgaria","Burundi","Cambodia","Cameroon","Chad","Chile","Colombia","Comoros","Congo","Croatia","Cuba","Cyprus","Djibouti","Dominica","Ecuador","Egypt","Eritrea","Estonia","Ethiopia","Finland","Gambia","Gabon","Georgia","Germany","Ghana","Greece","Grenada","Guam","Guatemala","Guinea","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kiribati","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Liechtenstein","Lithuania","Luxembourg","Macao","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Mauritania","Mauritius","Mexico","Moldova","Monaco","Mongolia","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Nicaragua","Niger","Nigeria","Niue","Norway","Oman","Pakistan","Palau","Panama","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Qatar","Romania","Rwanda","Samoa","Senegal","Seychelles","Singapore","Slovakia","Slovenia","Somalia","Spain","Sudan","Suriname","Swaziland","Sweden","Switzerland","Syria","Tajikistan","Tanzania","Thailand","Togo","Tokelau","Tonga","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","Uruguay","Uzbekistan","Vanuatu","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe","statesToCodes","AS","FM","MH","MP","PW","countriesToContinents","usStateCodeByName","nameToCode","excludeFromMap","AG","BB","BH","CV","DM","GD","KN","LC","MU","MV","PO","TL","SG","VC","TimeSeries","locationSeries","prop","counts","population","next","div","lastValue","lastPercent","peakValue","peakPercent","dates","country","countryCode","locale","populationDensity","stateCode","TimeSeriesArray","asc","el","sortByProp","Integrators","Euler","Midpoint","Heun","Ralston","K3","SSP33","SSP43","RK4","RK38","integrate","ki","_y","dt","Seir","I0","InterventionTime","R0","D_incbation","D_infectious","D_recovery_mild","D_hospital_lag","D_recovery_severe","Time_to_death","D_death","P_SEVERE","CFR","OMInterventionAmt","InterventionAmt","duration","interventionTime","steps","method","beta","gamma","S","I","Mild","Severe","Severe_H","Fatal","p_severe","p_fatal","TI","Iters","total_infected","dIters","populationDictionary","populationDensityDictionary","density","jhuUrls","fetchData","all","fetch","unwrapResponses","convertAllJhuCsvToStructured","convertToCountryDictionary","manuallyAdjust","unwrapResponse","convertNytCsvToStructured","mergeNytIntoJhu","dict","count","arr","rdays","confirmed","rprev","diff","deathNoConfirmed","recoveryNoConfirmed","getRecoveryDays","projectionReverseDeath","day","numberOfCasesCausingDeath","numberOfDoubles","pow","reverseDeathProjection","interpolateRecoveriesActiveCasesAndNewProps","totalKey","getPopulation","getPopulationDensity","addCounts","sumAllRegions","world","generateDateDictionary","ds","Date","sumWorld","toITimeSeries","extractCountries","jhu","nyt","dictionary","timeSeries","ts","createOnEach","countryNotFound","stateNotFound","unexpectedLength","tsc","getStatePopulation","populationNotFound","rawStateCode","response","text","responses","csvRowStringToArray","csvRow","chars","buffer","isEscape","isInQuote","toggleEscape","convertRowToTimeSeries","row","string","trim","stateToLocaleState","convertStringArrayToStructured","rowString","rows","csvRowStringToJhuTimeSeriesHeader","csvStrings","simplePad","number","day0","getTime","now","days","floor","today","getUTCFullYear","getUTCMonth","getUTCDate","timeSeriesDict","keyFromUsState","nytRowsToDict","sortNytRows","byState","byTime","dateDict","timeSeriesIndex","dateString","last","convertNytTimeSeriesDictToStateDict","countryName","getChartTypeFromIndex","getTimeVsCountsSeries","cache","selectedIndex","cs","timeVsCountsState","selectTimeVsCountsDataByConfirmed","projectionsSeir","createSeirPoints","dataSetIndex","field","createSelectTimeVsCountsChart","projectPoints","points","ps","getY","tooltip","createToolTip","createSelectTimeVsCountsByDateReducer","selectTimeVsCountsDataByDate","selectTimeVsCountsDataByMode","getConfirmedVsRecentSeries","colour","line","recentDaysAgo","reverse","selectConfirmedVsRecentData","getFieldFromIndex","fromDay0","fp","num","toFixed","toLocaleString","formatName","toLocaleDateString","projections","createSelectTimeVsCountsByConfirmedReducer","byConfirmedStart","intervention","getIntervention","seir","lastConfirmed","start","solution","getSolution","usaCode","defaultCountries","loadState","localStorage","getItem","parsed","JSON","parse","isDataType","dataTypeAppState","wipingOld","setItem","dataPromise","parseFail","dataTypeSavedTimeVsCountsState","dataTypeSavedTableState","pi","decimals","formatDecimal","showAll","column","columns","concat","header","learningTable","titles","region","lastActive","activePercent","lastActivePercent","confirmedPercent","lastConfirmedPercent","lastDeaths","deathsPercent","lastDeathsPercent","lastRecoveries","recoveriesPercent","lastRecoveriesPercent","mortality","lastMortality","lastNewConfirmed","lastNewDeaths","peakActive","peakActivePercent","peakConfirmed","peakConfirmedPercent","peakDeaths","peakDeathsPercent","peakRecoveries","peakRecoveriesPercent","peakMortality","peakNewConfirmed","peakNewDeaths","tbody","body","clientHeight","width","clickHeader","tsIndex","rowParity","rowHighlight","onChangeColumns","toggleShowAll","showOnlySelected","Header","class","title","jhuGitHubTitle","jhuSourceDataLink","explorer","usData","usDataTitle","usDataLink","sourceCodeTitle","sourceCodeLink","feedbackTitle","feedbackLink","confirmedVsRecent","recentCases","selectShowStates","getChartOptions","title_label_text","defaultPoint","toolTip","palette","pointValue","ranges","dataSet","isPlaying","menuProp","timer","getSeries","getCountrySeries","currentOptions","properties","mapcode","continent","getSeriesName","geography","mode0","mode1","mode2","mode3","getMapTitle","setInterval","togglePlay","clearInterval","countryFromClick","getStateSeries","tryContinent","continentFromClick","finalContinent","getContinentSeries","record","getFromDataSet","getRangesFromDataSet","defaultPoint_events_click","onMapClick","isIn","stc","int","zoomOut","onChangeDataSet","play","stop","AboutList","list","description","definitionsSeries","descriptions","part1","link","part2","projectionSeir","definitionsMetrics","byPercet","definitionsModes","definitionsScales","scales","app","noState","routePath","tableState","sortByActive","sortByActivePercent","sortByConfirmed","sortByConfirmedPercent","sortByDeaths","sortByDeathsPercent","sortByNewConfirmed","sortByNewDeaths","sortByRecoveries","sortByRecoveriesPercent","sortByPeakActive","sortByPeakActivePercent","sortByPeakConfirmed","sortByPeakConfirmedPercent","sortByPeakDeaths","sortByPeakDeathsPercent","sortByPeakNewConfirmed","sortByPeakNewDeaths","sortByPeakRecoveries","sortByPeakRecoveriesPercent","sortByPopulation","sortByPopulationDensity","confirmedVsRecentState","selectAndUpdate","updateSelectState","saveState","stringify","tvc","cvr","reset","countryKey","defaultLanguage","convertJsonToInjectedJson","set","main","lang","getSavedLanguage","getLanguage","element","errors","bootstrap","root","catch","language","i18n","reject"],"mappings":"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","file":"covid-19-explorer.2a61e0c83a83810e9eb8.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","var map = {\n\t\"./en.json\": 0\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 3;\nmodule.exports = webpackAsyncContext;","var n,l,u,i,t,o,r,f,e={},c=[],s=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;function a(n,l){for(var u in l)n[u]=l[u];return n}function v(n){var l=n.parentNode;l&&l.removeChild(n)}function h(n,l,u){var i,t=arguments,o={};for(i in l)\"key\"!==i&&\"ref\"!==i&&(o[i]=l[i]);if(arguments.length>3)for(u=[u],i=3;i<arguments.length;i++)u.push(t[i]);if(null!=u&&(o.children=u),\"function\"==typeof n&&null!=n.defaultProps)for(i in n.defaultProps)void 0===o[i]&&(o[i]=n.defaultProps[i]);return p(n,o,l&&l.key,l&&l.ref)}function p(l,u,i,t){var o={type:l,props:u,key:i,ref:t,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0};return n.vnode&&n.vnode(o),o}function y(){return{}}function d(n){return n.children}function m(n,l){this.props=n,this.context=l}function w(n,l){if(null==l)return n.__?w(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?w(n):null}function g(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return g(n)}}function k(l){(!l.__d&&(l.__d=!0)&&u.push(l)&&!i++||o!==n.debounceRendering)&&((o=n.debounceRendering)||t)(_)}function _(){for(var n;i=u.length;)n=u.sort(function(n,l){return n.__v.__b-l.__v.__b}),u=[],n.some(function(n){var l,u,i,t,o,r;n.__d&&(o=(t=(l=n).__v).__e,(r=l.__P)&&(u=[],i=A(r,t,a({},t),l.__n,void 0!==r.ownerSVGElement,null,u,null==o?w(t):o),T(u,t),i!=o&&g(t)))})}function b(n,l,u,i,t,o,r,f,s){var a,h,p,y,d,m,g,k=u&&u.__k||c,_=k.length;if(f==e&&(f=null!=o?o[0]:_?w(u,0):null),a=0,l.__k=x(l.__k,function(u){if(null!=u){if(u.__=l,u.__b=l.__b+1,null===(p=k[a])||p&&u.key==p.key&&u.type===p.type)k[a]=void 0;else for(h=0;h<_;h++){if((p=k[h])&&u.key==p.key&&u.type===p.type){k[h]=void 0;break}p=null}if(y=A(n,u,p=p||e,i,t,o,r,f,s),(h=u.ref)&&p.ref!=h&&(g||(g=[]),p.ref&&g.push(p.ref,null,u),g.push(h,u.__c||y,u)),null!=y){var c;if(null==m&&(m=y),void 0!==u.__d)c=u.__d,u.__d=void 0;else if(o==p||y!=f||null==y.parentNode){n:if(null==f||f.parentNode!==n)n.appendChild(y),c=null;else{for(d=f,h=0;(d=d.nextSibling)&&h<_;h+=2)if(d==y)break n;n.insertBefore(y,f),c=f}\"option\"==l.type&&(n.value=\"\")}f=void 0!==c?c:y.nextSibling,\"function\"==typeof l.type&&(l.__d=f)}else f&&p.__e==f&&f.parentNode!=n&&(f=w(p))}return a++,u}),l.__e=m,null!=o&&\"function\"!=typeof l.type)for(a=o.length;a--;)null!=o[a]&&v(o[a]);for(a=_;a--;)null!=k[a]&&D(k[a],k[a]);if(g)for(a=0;a<g.length;a++)j(g[a],g[++a],g[++a])}function x(n,l,u){if(null==u&&(u=[]),null==n||\"boolean\"==typeof n)l&&u.push(l(null));else if(Array.isArray(n))for(var i=0;i<n.length;i++)x(n[i],l,u);else u.push(l?l(\"string\"==typeof n||\"number\"==typeof n?p(null,n,null,null):null!=n.__e||null!=n.__c?p(n.type,n.props,n.key,null):n):n);return u}function P(n,l,u,i,t){var o;for(o in u)o in l||N(n,o,null,u[o],i);for(o in l)t&&\"function\"!=typeof l[o]||\"value\"===o||\"checked\"===o||u[o]===l[o]||N(n,o,l[o],u[o],i)}function C(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=\"number\"==typeof u&&!1===s.test(l)?u+\"px\":null==u?\"\":u}function N(n,l,u,i,t){var o,r,f,e,c;if(t?\"className\"===l&&(l=\"class\"):\"class\"===l&&(l=\"className\"),\"key\"===l||\"children\"===l);else if(\"style\"===l)if(o=n.style,\"string\"==typeof u)o.cssText=u;else{if(\"string\"==typeof i&&(o.cssText=\"\",i=null),i)for(r in i)u&&r in u||C(o,r,\"\");if(u)for(f in u)i&&u[f]===i[f]||C(o,f,u[f])}else\"o\"===l[0]&&\"n\"===l[1]?(e=l!==(l=l.replace(/Capture$/,\"\")),c=l.toLowerCase(),l=(c in n?c:l).slice(2),u?(i||n.addEventListener(l,z,e),(n.l||(n.l={}))[l]=u):n.removeEventListener(l,z,e)):\"list\"!==l&&\"tagName\"!==l&&\"form\"!==l&&\"type\"!==l&&\"size\"!==l&&!t&&l in n?n[l]=null==u?\"\":u:\"function\"!=typeof u&&\"dangerouslySetInnerHTML\"!==l&&(l!==(l=l.replace(/^xlink:?/,\"\"))?null==u||!1===u?n.removeAttributeNS(\"http://www.w3.org/1999/xlink\",l.toLowerCase()):n.setAttributeNS(\"http://www.w3.org/1999/xlink\",l.toLowerCase(),u):null==u||!1===u&&!/^ar/.test(l)?n.removeAttribute(l):n.setAttribute(l,u))}function z(l){this.l[l.type](n.event?n.event(l):l)}function A(l,u,i,t,o,r,f,e,c){var s,v,h,p,y,w,g,k,_,x,P=u.type;if(void 0!==u.constructor)return null;(s=n.__b)&&s(u);try{n:if(\"function\"==typeof P){if(k=u.props,_=(s=P.contextType)&&t[s.__c],x=s?_?_.props.value:s.__:t,i.__c?g=(v=u.__c=i.__c).__=v.__E:(\"prototype\"in P&&P.prototype.render?u.__c=v=new P(k,x):(u.__c=v=new m(k,x),v.constructor=P,v.render=E),_&&_.sub(v),v.props=k,v.state||(v.state={}),v.context=x,v.__n=t,h=v.__d=!0,v.__h=[]),null==v.__s&&(v.__s=v.state),null!=P.getDerivedStateFromProps&&(v.__s==v.state&&(v.__s=a({},v.__s)),a(v.__s,P.getDerivedStateFromProps(k,v.__s))),p=v.props,y=v.state,h)null==P.getDerivedStateFromProps&&null!=v.componentWillMount&&v.componentWillMount(),null!=v.componentDidMount&&v.__h.push(v.componentDidMount);else{if(null==P.getDerivedStateFromProps&&k!==p&&null!=v.componentWillReceiveProps&&v.componentWillReceiveProps(k,x),!v.__e&&null!=v.shouldComponentUpdate&&!1===v.shouldComponentUpdate(k,v.__s,x)){for(v.props=k,v.state=v.__s,v.__d=!1,v.__v=u,u.__e=i.__e,u.__k=i.__k,v.__h.length&&f.push(v),s=0;s<u.__k.length;s++)u.__k[s]&&(u.__k[s].__=u);break n}null!=v.componentWillUpdate&&v.componentWillUpdate(k,v.__s,x),null!=v.componentDidUpdate&&v.__h.push(function(){v.componentDidUpdate(p,y,w)})}v.context=x,v.props=k,v.state=v.__s,(s=n.__r)&&s(u),v.__d=!1,v.__v=u,v.__P=l,s=v.render(v.props,v.state,v.context),u.__k=null!=s&&s.type==d&&null==s.key?s.props.children:Array.isArray(s)?s:[s],null!=v.getChildContext&&(t=a(a({},t),v.getChildContext())),h||null==v.getSnapshotBeforeUpdate||(w=v.getSnapshotBeforeUpdate(p,y)),b(l,u,i,t,o,r,f,e,c),v.base=u.__e,v.__h.length&&f.push(v),g&&(v.__E=v.__=null),v.__e=!1}else u.__e=$(i.__e,u,i,t,o,r,f,c);(s=n.diffed)&&s(u)}catch(l){n.__e(l,u,i)}return u.__e}function T(l,u){n.__c&&n.__c(u,l),l.some(function(u){try{l=u.__h,u.__h=[],l.some(function(n){n.call(u)})}catch(l){n.__e(l,u.__v)}})}function $(n,l,u,i,t,o,r,f){var s,a,v,h,p,y=u.props,d=l.props;if(t=\"svg\"===l.type||t,null!=o)for(s=0;s<o.length;s++)if(null!=(a=o[s])&&((null===l.type?3===a.nodeType:a.localName===l.type)||n==a)){n=a,o[s]=null;break}if(null==n){if(null===l.type)return document.createTextNode(d);n=t?document.createElementNS(\"http://www.w3.org/2000/svg\",l.type):document.createElement(l.type,d.is&&{is:d.is}),o=null}if(null===l.type)y!==d&&n.data!=d&&(n.data=d);else if(l!==u){if(null!=o&&(o=c.slice.call(n.childNodes)),v=(y=u.props||e).dangerouslySetInnerHTML,h=d.dangerouslySetInnerHTML,!f){if(y===e)for(y={},p=0;p<n.attributes.length;p++)y[n.attributes[p].name]=n.attributes[p].value;(h||v)&&(h&&v&&h.__html==v.__html||(n.innerHTML=h&&h.__html||\"\"))}P(n,d,y,t,f),l.__k=l.props.children,h||b(n,l,u,i,\"foreignObject\"!==l.type&&t,o,r,e,f),f||(\"value\"in d&&void 0!==d.value&&d.value!==n.value&&(n.value=null==d.value?\"\":d.value),\"checked\"in d&&void 0!==d.checked&&d.checked!==n.checked&&(n.checked=d.checked))}return n}function j(l,u,i){try{\"function\"==typeof l?l(u):l.current=u}catch(l){n.__e(l,i)}}function D(l,u,i){var t,o,r;if(n.unmount&&n.unmount(l),(t=l.ref)&&(t.current&&t.current!==l.__e||j(t,null,u)),i||\"function\"==typeof l.type||(i=null!=(o=l.__e)),l.__e=l.__d=void 0,null!=(t=l.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(l){n.__e(l,u)}t.base=t.__P=null}if(t=l.__k)for(r=0;r<t.length;r++)t[r]&&D(t[r],u,i);null!=o&&v(o)}function E(n,l,u){return this.constructor(n,u)}function H(l,u,i){var t,o,f;n.__&&n.__(l,u),o=(t=i===r)?null:i&&i.__k||u.__k,l=h(d,null,[l]),f=[],A(u,(t?u:i||u).__k=l,o||e,e,void 0!==u.ownerSVGElement,i&&!t?[i]:o?null:c.slice.call(u.childNodes),f,i||e,t),T(f,l)}function I(n,l){H(n,l,r)}function L(n,l){return l=a(a({},n.props),l),arguments.length>2&&(l.children=c.slice.call(arguments,2)),p(n.type,l,l.key||n.key,l.ref||n.ref)}function M(n){var l={},u={__c:\"__cC\"+f++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var i,t=this;return this.getChildContext||(i=[],this.getChildContext=function(){return l[u.__c]=t,l},this.shouldComponentUpdate=function(l){n.value!==l.value&&i.some(function(n){n.context=l.value,k(n)})},this.sub=function(n){i.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){i.splice(i.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Consumer.contextType=u,u}n={__e:function(n,l){for(var u,i;l=l.__;)if((u=l.__c)&&!u.__)try{if(u.constructor&&null!=u.constructor.getDerivedStateFromError&&(i=!0,u.setState(u.constructor.getDerivedStateFromError(n))),null!=u.componentDidCatch&&(i=!0,u.componentDidCatch(n)),i)return k(u.__E=u)}catch(l){n=l}throw n}},l=function(n){return null!=n&&void 0===n.constructor},m.prototype.setState=function(n,l){var u;u=this.__s!==this.state?this.__s:this.__s=a({},this.state),\"function\"==typeof n&&(n=n(u,this.props)),n&&a(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),k(this))},m.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),k(this))},m.prototype.render=d,u=[],i=0,t=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,r=e,f=0;export{H as render,I as hydrate,h as createElement,h,d as Fragment,y as createRef,l as isValidElement,m as Component,L as cloneElement,M as createContext,x as toChildArray,D as _unmount,n as options};\n//# sourceMappingURL=preact.module.js.map\n","import { Component, cloneElement, createElement, toChildArray } from 'preact';\n\nvar EMPTY$1 = {};\n\nfunction assign(obj, props) {\n\t// eslint-disable-next-line guard-for-in\n\tfor (var i in props) {\n\t\tobj[i] = props[i];\n\t}\n\treturn obj;\n}\n\nfunction exec(url, route, opts) {\n\tvar reg = /(?:\\?([^#]*))?(#.*)?$/,\n\t\tc = url.match(reg),\n\t\tmatches = {},\n\t\tret;\n\tif (c && c[1]) {\n\t\tvar p = c[1].split('&');\n\t\tfor (var i=0; i<p.length; i++) {\n\t\t\tvar r = p[i].split('=');\n\t\t\tmatches[decodeURIComponent(r[0])] = decodeURIComponent(r.slice(1).join('='));\n\t\t}\n\t}\n\turl = segmentize(url.replace(reg, ''));\n\troute = segmentize(route || '');\n\tvar max = Math.max(url.length, route.length);\n\tfor (var i$1=0; i$1<max; i$1++) {\n\t\tif (route[i$1] && route[i$1].charAt(0)===':') {\n\t\t\tvar param = route[i$1].replace(/(^:|[+*?]+$)/g, ''),\n\t\t\t\tflags = (route[i$1].match(/[+*?]+$/) || EMPTY$1)[0] || '',\n\t\t\t\tplus = ~flags.indexOf('+'),\n\t\t\t\tstar = ~flags.indexOf('*'),\n\t\t\t\tval = url[i$1] || '';\n\t\t\tif (!val && !star && (flags.indexOf('?')<0 || plus)) {\n\t\t\t\tret = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatches[param] = decodeURIComponent(val);\n\t\t\tif (plus || star) {\n\t\t\t\tmatches[param] = url.slice(i$1).map(decodeURIComponent).join('/');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if (route[i$1]!==url[i$1]) {\n\t\t\tret = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (opts.default!==true && ret===false) { return false; }\n\treturn matches;\n}\n\nfunction pathRankSort(a, b) {\n\treturn (\n\t\t(a.rank < b.rank) ? 1 :\n\t\t\t(a.rank > b.rank) ? -1 :\n\t\t\t\t(a.index - b.index)\n\t);\n}\n\n// filter out VNodes without attributes (which are unrankeable), and add `index`/`rank` properties to be used in sorting.\nfunction prepareVNodeForRanking(vnode, index) {\n\tvnode.index = index;\n\tvnode.rank = rankChild(vnode);\n\treturn vnode.props;\n}\n\nfunction segmentize(url) {\n\treturn url.replace(/(^\\/+|\\/+$)/g, '').split('/');\n}\n\nfunction rankSegment(segment) {\n\treturn segment.charAt(0)==':' ? (1 + '*+?'.indexOf(segment.charAt(segment.length-1))) || 4 : 5;\n}\n\nfunction rank(path) {\n\treturn segmentize(path).map(rankSegment).join('');\n}\n\nfunction rankChild(vnode) {\n\treturn vnode.props.default ? 0 : rank(vnode.props.path);\n}\n\nvar customHistory = null;\n\nvar ROUTERS = [];\n\nvar subscribers = [];\n\nvar EMPTY = {};\n\nfunction setUrl(url, type) {\n\tif ( type === void 0 ) type='push';\n\n\tif (customHistory && customHistory[type]) {\n\t\tcustomHistory[type](url);\n\t}\n\telse if (typeof history!=='undefined' && history[type+'State']) {\n\t\thistory[type+'State'](null, null, url);\n\t}\n}\n\n\nfunction getCurrentUrl() {\n\tvar url;\n\tif (customHistory && customHistory.location) {\n\t\turl = customHistory.location;\n\t}\n\telse if (customHistory && customHistory.getCurrentLocation) {\n\t\turl = customHistory.getCurrentLocation();\n\t}\n\telse {\n\t\turl = typeof location!=='undefined' ? location : EMPTY;\n\t}\n\treturn (\"\" + (url.pathname || '') + (url.search || ''));\n}\n\n\n\nfunction route(url, replace) {\n\tif ( replace === void 0 ) replace=false;\n\n\tif (typeof url!=='string' && url.url) {\n\t\treplace = url.replace;\n\t\turl = url.url;\n\t}\n\n\t// only push URL into history if we can handle it\n\tif (canRoute(url)) {\n\t\tsetUrl(url, replace ? 'replace' : 'push');\n\t}\n\n\treturn routeTo(url);\n}\n\n\n/** Check if the given URL can be handled by any router instances. */\nfunction canRoute(url) {\n\tfor (var i=ROUTERS.length; i--; ) {\n\t\tif (ROUTERS[i].canRoute(url)) { return true; }\n\t}\n\treturn false;\n}\n\n\n/** Tell all router instances to handle the given URL.  */\nfunction routeTo(url) {\n\tvar didRoute = false;\n\tfor (var i=0; i<ROUTERS.length; i++) {\n\t\tif (ROUTERS[i].routeTo(url)===true) {\n\t\t\tdidRoute = true;\n\t\t}\n\t}\n\tfor (var i$1=subscribers.length; i$1--; ) {\n\t\tsubscribers[i$1](url);\n\t}\n\treturn didRoute;\n}\n\n\nfunction routeFromLink(node) {\n\t// only valid elements\n\tif (!node || !node.getAttribute) { return; }\n\n\tvar href = node.getAttribute('href'),\n\t\ttarget = node.getAttribute('target');\n\n\t// ignore links with targets and non-path URLs\n\tif (!href || !href.match(/^\\//g) || (target && !target.match(/^_?self$/i))) { return; }\n\n\t// attempt to route, if no match simply cede control to browser\n\treturn route(href);\n}\n\n\nfunction handleLinkClick(e) {\n\tif (e.ctrlKey || e.metaKey || e.altKey || e.shiftKey || e.button!==0) { return; }\n\trouteFromLink(e.currentTarget || e.target || this);\n\treturn prevent(e);\n}\n\n\nfunction prevent(e) {\n\tif (e) {\n\t\tif (e.stopImmediatePropagation) { e.stopImmediatePropagation(); }\n\t\tif (e.stopPropagation) { e.stopPropagation(); }\n\t\te.preventDefault();\n\t}\n\treturn false;\n}\n\n\nfunction delegateLinkHandler(e) {\n\t// ignore events the browser takes care of already:\n\tif (e.ctrlKey || e.metaKey || e.altKey || e.shiftKey || e.button!==0) { return; }\n\n\tvar t = e.target;\n\tdo {\n\t\tif (String(t.nodeName).toUpperCase()==='A' && t.getAttribute('href')) {\n\t\t\tif (t.hasAttribute('native')) { return; }\n\t\t\t// if link is handled by the router, prevent browser defaults\n\t\t\tif (routeFromLink(t)) {\n\t\t\t\treturn prevent(e);\n\t\t\t}\n\t\t}\n\t} while ((t=t.parentNode));\n}\n\n\nvar eventListenersInitialized = false;\n\nfunction initEventListeners() {\n\tif (eventListenersInitialized) { return; }\n\n\tif (typeof addEventListener==='function') {\n\t\tif (!customHistory) {\n\t\t\taddEventListener('popstate', function () {\n\t\t\t\trouteTo(getCurrentUrl());\n\t\t\t});\n\t\t}\n\t\taddEventListener('click', delegateLinkHandler);\n\t}\n\teventListenersInitialized = true;\n}\n\n\nvar Router = (function (Component$$1) {\n\tfunction Router(props) {\n\t\tComponent$$1.call(this, props);\n\t\tif (props.history) {\n\t\t\tcustomHistory = props.history;\n\t\t}\n\n\t\tthis.state = {\n\t\t\turl: props.url || getCurrentUrl()\n\t\t};\n\n\t\tinitEventListeners();\n\t}\n\n\tif ( Component$$1 ) Router.__proto__ = Component$$1;\n\tRouter.prototype = Object.create( Component$$1 && Component$$1.prototype );\n\tRouter.prototype.constructor = Router;\n\n\tRouter.prototype.shouldComponentUpdate = function shouldComponentUpdate (props) {\n\t\tif (props.static!==true) { return true; }\n\t\treturn props.url!==this.props.url || props.onChange!==this.props.onChange;\n\t};\n\n\t/** Check if the given URL can be matched against any children */\n\tRouter.prototype.canRoute = function canRoute (url) {\n\t\tvar children = toChildArray(this.props.children);\n\t\treturn this.getMatchingChildren(children, url, false).length > 0;\n\t};\n\n\t/** Re-render children with a new URL to match against. */\n\tRouter.prototype.routeTo = function routeTo (url) {\n\t\tthis.setState({ url: url });\n\n\t\tvar didRoute = this.canRoute(url);\n\n\t\t// trigger a manual re-route if we're not in the middle of an update:\n\t\tif (!this.updating) { this.forceUpdate(); }\n\n\t\treturn didRoute;\n\t};\n\n\tRouter.prototype.componentWillMount = function componentWillMount () {\n\t\tROUTERS.push(this);\n\t\tthis.updating = true;\n\t};\n\n\tRouter.prototype.componentDidMount = function componentDidMount () {\n\t\tvar this$1 = this;\n\n\t\tif (customHistory) {\n\t\t\tthis.unlisten = customHistory.listen(function (location) {\n\t\t\t\tthis$1.routeTo((\"\" + (location.pathname || '') + (location.search || '')));\n\t\t\t});\n\t\t}\n\t\tthis.updating = false;\n\t};\n\n\tRouter.prototype.componentWillUnmount = function componentWillUnmount () {\n\t\tif (typeof this.unlisten==='function') { this.unlisten(); }\n\t\tROUTERS.splice(ROUTERS.indexOf(this), 1);\n\t};\n\n\tRouter.prototype.componentWillUpdate = function componentWillUpdate () {\n\t\tthis.updating = true;\n\t};\n\n\tRouter.prototype.componentDidUpdate = function componentDidUpdate () {\n\t\tthis.updating = false;\n\t};\n\n\tRouter.prototype.getMatchingChildren = function getMatchingChildren (children, url, invoke) {\n\t\treturn children\n\t\t\t.filter(prepareVNodeForRanking)\n\t\t\t.sort(pathRankSort)\n\t\t\t.map( function (vnode) {\n\t\t\t\tvar matches = exec(url, vnode.props.path, vnode.props);\n\t\t\t\tif (matches) {\n\t\t\t\t\tif (invoke !== false) {\n\t\t\t\t\t\tvar newProps = { url: url, matches: matches };\n\t\t\t\t\t\tassign(newProps, matches);\n\t\t\t\t\t\tdelete newProps.ref;\n\t\t\t\t\t\tdelete newProps.key;\n\t\t\t\t\t\treturn cloneElement(vnode, newProps);\n\t\t\t\t\t}\n\t\t\t\t\treturn vnode;\n\t\t\t\t}\n\t\t\t}).filter(Boolean);\n\t};\n\n\tRouter.prototype.render = function render (ref, ref$1) {\n\t\tvar children = ref.children;\n\t\tvar onChange = ref.onChange;\n\t\tvar url = ref$1.url;\n\n\t\tvar active = this.getMatchingChildren(toChildArray(children), url, true);\n\n\t\tvar current = active[0] || null;\n\n\t\tvar previous = this.previousUrl;\n\t\tif (url!==previous) {\n\t\t\tthis.previousUrl = url;\n\t\t\tif (typeof onChange==='function') {\n\t\t\t\tonChange({\n\t\t\t\t\trouter: this,\n\t\t\t\t\turl: url,\n\t\t\t\t\tprevious: previous,\n\t\t\t\t\tactive: active,\n\t\t\t\t\tcurrent: current\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn current;\n\t};\n\n\treturn Router;\n}(Component));\n\nvar Link = function (props) { return (\n\tcreateElement('a', assign({ onClick: handleLinkClick }, props))\n); };\n\nvar Route = function (props) { return createElement(props.component, props); };\n\nRouter.subscribers = subscribers;\nRouter.getCurrentUrl = getCurrentUrl;\nRouter.route = route;\nRouter.Router = Router;\nRouter.Route = Route;\nRouter.Link = Link;\nRouter.exec = exec;\n\nexport { subscribers, getCurrentUrl, route, Router, Route, Link, exec };export default Router;\n//# sourceMappingURL=preact-router.es.js.map\n","export function isMobile() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4)))\n            check = true;\n    })(navigator.userAgent || navigator.vendor || window.opera);\n    return check;\n}\nexport function log(...args) {\n    console.log('COVID-19', ...args);\n}\nexport function filterStates(doFilter, strings) {\n    return (item) => {\n        if (doFilter === false) {\n            return true;\n        }\n        // special case for Korea\n        if (item.name.toLowerCase().indexOf('korea') > -1) {\n            return true;\n        }\n        if (item.name.indexOf(',') > -1) {\n            if (item.name.indexOf(`, ${strings.countries.total}`) > -1) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n}\n","import { Component, h } from 'preact';\nimport { log } from '../utility';\nexport class Chart extends Component {\n    constructor() {\n        super();\n        this.componentWillReceiveProps = debounce(props => {\n            this.chart = null;\n            this.createChart(props);\n        });\n    }\n    createChart(props = this.props) {\n        if (!this.chart && props.options.series.length) {\n            this.chart = JSC.Chart('chartDiv', props.options);\n        }\n    }\n    componentDidMount() {\n        this.base.id = 'chartDiv';\n        this.createChart();\n    }\n    render() {\n        return h(\"div\", { className: this.props.flexSize });\n    }\n}\nfunction debounce(fn, limit = 50) {\n    let isRunning = 0;\n    let lastArgs = [];\n    const run = () => {\n        try {\n            fn(...lastArgs);\n        }\n        catch (e) {\n            log('Warning debounced function failed: ' + e.message);\n        }\n        finally {\n            isRunning = 0;\n            lastArgs = [];\n        }\n    };\n    return (...args) => {\n        lastArgs = args;\n        if (isRunning) {\n            clearTimeout(isRunning);\n            isRunning = setTimeout(run, limit);\n        }\n        else {\n            isRunning = setTimeout(run, limit);\n        }\n    };\n}\n","export const border = 'border';\nexport const fullSize = 'full-size';\nexport const flex = 'flex';\nexport const flexCol = 'flex flex-col';\nexport const flexItem5 = 'flex-item-5';\nexport const flexItem20 = 'flex-item-20';\nexport const flexItem60 = 'flex-item-60';\nexport const flexItem95 = 'flex-item-95';\nexport const highlight = 'highlight';\nexport const padding = 'padding';\nexport const rowEven = 'row-even';\nexport const rowOdd = 'row-odd';\nexport const rowHighlight = 'row-highlight';\nexport const twentyFourSeven = 24 * 60 * 60 * 1000;\nexport const recoveryDays = 25;\nexport const jhuStartDay = '2020-01-22';\nexport const reverseDeathProjectionDefaults = Object.freeze({\n    daysFromInfectionToDeath: 17.3,\n    doublingTime: 6.18,\n    fatalityRate: 0.0087,\n    minDeaths: 10,\n});\nexport const usaCode = 'US';\nexport const basePalette = [\n    '#e01010',\n    '#067ff1',\n    '#5adc13',\n    '#14f8e5',\n    '#e30ed6',\n    '#ff6600',\n    '#ece019',\n    '#590596',\n];\nexport const projectionPalette = [\n    '#f09090',\n    '#add0f1',\n    '#b5dc9f',\n    '#b7f8f3',\n    '#e3c1e1',\n    '#ffc6a0',\n    '#ece79c',\n    '#9e8dce',\n];\nexport const activeRanges = [\n    { value: [0, 1], color: '#FFFFFF' },\n    { value: [0, 100], color: '#fff5f5' },\n    { value: [100, 1000], color: '#ffdcdc' },\n    { value: [1000, 5000], color: '#ffa0a0' },\n    { value: [5000, 15000], color: '#ff7373' },\n    { value: [15000, 50000], color: '#ff4b4b' },\n    { value: [50000, 150000], color: '#ff1919' },\n    { value: [150000, 5000000000], color: '#c60000' },\n];\nexport const confirmedRanges = [\n    { value: [0, 1], color: '#FFFFFF' },\n    { value: [0, 500], color: '#fff5f5' },\n    { value: [500, 5000], color: '#ffdcdc' },\n    { value: [5000, 15000], color: '#ffa0a0' },\n    { value: [15000, 50000], color: '#ff7373' },\n    { value: [50000, 150000], color: '#ff4b4b' },\n    { value: [150000, 500000], color: '#ff1919' },\n    { value: [500000, 5000000000], color: '#c60000' },\n];\nexport const deathRanges = [\n    { value: [0, 1], color: '#FFFFFF' },\n    { value: [0, 50], color: '#fff5f5' },\n    { value: [50, 150], color: '#ffdcdc' },\n    { value: [150, 500], color: '#ffa0a0' },\n    { value: [500, 1500], color: '#ff7373' },\n    { value: [1500, 10000], color: '#ff4b4b' },\n    { value: [10000, 50000], color: '#ff1919' },\n    { value: [50000, 5000000000], color: '#c60000' },\n];\nexport const recoveryRanges = [\n    { value: [0, 1], color: '#FFFFFF' },\n    { value: [1, 500], color: '#f0fff0' },\n    { value: [500, 5000], color: '#dcffdc' },\n    { value: [5000, 50000], color: '#beffbe' },\n    { value: [50000, 250000], color: '#a0ffa0' },\n    { value: [250000, 1000000], color: '#78ff78' },\n    { value: [1000000, 5000000], color: '#41ff41' },\n    { value: [5000000, 5000000000], color: '#009900' },\n];\n","export function arrToObj(arr, prop, aggregate) {\n    return arr.reduce((state, el, i) => {\n        let index;\n        if (!prop) {\n            index = i;\n        }\n        else {\n            index = el[prop];\n        }\n        if (aggregate) {\n            if (!state[index]) {\n                state[index] = [];\n            }\n            state[index].push(el);\n        }\n        else {\n            state[index] = el;\n        }\n        return state;\n    }, {});\n}\n/** assumes number is between 0 - 1 inclusive of 0 but not 1 */\nexport function createBetween(random) {\n    return (minimum, maximum) => {\n        const min = Math.ceil(minimum);\n        const max = Math.floor(maximum);\n        return Math.floor(random() * (max - min)) + min;\n    };\n}\nexport function deepFreeze(obj) {\n    if (Array.isArray(obj)) {\n        return Object.freeze(obj.map(deepFreeze));\n    }\n    if (isObject(obj)) {\n        for (let i in obj) {\n            if (isObject(obj[i])) {\n                if (!Object.isFrozen(obj[i])) {\n                    obj[i] = deepFreeze(obj[i]);\n                }\n            }\n        }\n    }\n    return Object.freeze(obj);\n}\nexport function identity(thing) {\n    return thing;\n}\nexport function findCaseInsensitivePropInObj(obj, prop) {\n    const lProp = prop.toLowerCase();\n    return objReduce(obj, (obj, el, objProp) => {\n        if (obj) {\n            return obj;\n        }\n        if (lProp === objProp.toLowerCase()) {\n            return el;\n        }\n        return false;\n    }, false);\n}\nexport function hasProp(prop, haystack) {\n    return haystack[prop] ? true : false;\n}\nexport function isBoolean(arg) {\n    if (typeof arg === 'boolean') {\n        return true;\n    }\n    return false;\n}\nexport function isFunction(thing) {\n    return typeof thing === 'function';\n}\nexport function isNaN(thing) {\n    return thing !== thing;\n}\nexport function isNull(thing) {\n    return thing === null;\n}\nexport function isNumber(thing) {\n    return typeof thing === 'number';\n}\nexport function isObject(thing) {\n    if (!thing) {\n        return false;\n    }\n    return typeof thing === 'object';\n}\nexport function isString(thing) {\n    return typeof thing === 'string';\n}\nexport function isUndefined(thing) {\n    return thing === undefined;\n}\nexport function noop() { }\nexport function objEach(d, callback) {\n    Object.keys(d).forEach((key, i) => {\n        callback(d[key], key, i, d);\n    });\n}\nexport function objFilter(d, callback) {\n    return objReduce(d, (state, value, key, index) => {\n        if (callback(value, key, index)) {\n            state[key] = value;\n        }\n        return state;\n    }, {});\n}\nexport function objReduce(d, callback, init) {\n    return Object.keys(d).reduce((state, key, i) => {\n        return callback(state, d[key], key, i, d);\n    }, init);\n}\nexport function partial(f, ...boundArg) {\n    return (...args) => f(...boundArg, ...args);\n}\nexport function pluck(prop, haystack) {\n    return haystack[prop];\n}\nexport function toGtZeroIntMax(max, val) {\n    const num = toInt(val);\n    if (num > max) {\n        return max;\n    }\n    if (num < 0) {\n        return 0;\n    }\n    return num;\n}\nexport function toInt(val) {\n    return parseInt(val, 10);\n}\nexport function toIntArray(inputArr) {\n    if (Array.isArray(inputArr)) {\n        return inputArr.map(toInt);\n    }\n    return [];\n}\nexport function toIntArrayMax(max, inputArr) {\n    if (Array.isArray(inputArr)) {\n        return inputArr.map(thing => toIntMax(max, thing)).filter(Boolean);\n    }\n    return [];\n}\nexport function toIntArrayMin(max, inputArr) {\n    if (Array.isArray(inputArr)) {\n        return inputArr.map(thing => toIntMin(max, thing)).filter(Boolean);\n    }\n    return [];\n}\nexport function toIntBetween(min, max, val) {\n    const asInt = toInt(val);\n    if (asInt < min) {\n        return min;\n    }\n    if (asInt > max) {\n        return max;\n    }\n    return asInt;\n}\nexport function toIntBetweenOptional(min, max, val) {\n    if (min === undefined && max === undefined) {\n        return toInt(val);\n    }\n    if (min === undefined && max !== undefined) {\n        return toIntMax(max, val);\n    }\n    if (max === undefined && min !== undefined) {\n        return toIntMin(min, val);\n    }\n    return toIntBetween(min, max, val);\n}\nexport function toIntMax(max, val) {\n    const num = toInt(val);\n    if (num > max) {\n        return max;\n    }\n    return num;\n}\nexport function toIntMin(min, val) {\n    const num = toInt(val);\n    if (num < min) {\n        return min;\n    }\n    return num;\n}\nexport function toString(val) {\n    return val + '';\n}\nexport function toStringArray(input) {\n    if (Array.isArray(input)) {\n        return input.map(toString);\n    }\n    return [];\n}\nexport function toStringArrayMax(max, input) {\n    if (Array.isArray(input)) {\n        return input.map(thing => toStringMax(max, thing));\n    }\n    return [];\n}\nexport function toStringMax(max, val) {\n    const v = toString(val);\n    return v.length > max ? v.slice(0, max) : v;\n}\nexport function unzip(dictionary) {\n    return Object.keys(dictionary).reduce((s, val) => {\n        s.keys.push(val);\n        s.values.push(dictionary[val]);\n        return s;\n    }, {\n        keys: [],\n        values: []\n    });\n}\n/**\n *  If keys/values have different lengths the expect behavior is to \"underflow\"\n *  values.  Non values will be initialized to undefined. Non keys will be\n *  ignored.\n *\n *  If there are duplicate keys the last assignment \"wins\", this would be the\n *  key with the highest index in the given keys array\n */\nexport function zip(keys, values) {\n    return keys.reduce((o, key, i) => {\n        o[key] = values[i];\n        return o;\n    }, {});\n}\n//# sourceMappingURL=utility.js.map","import { h } from 'preact';\nimport { isString } from '@ch1/utility';\nexport function Select({ onChange, options, selected, }) {\n    const change = e => onChange(e.target.value);\n    return (h(\"select\", { onChange: change }, options.map((option, index) => {\n        if (isString(option)) {\n            if (selected === index) {\n                return (h(\"option\", { value: index, selected: true }, option));\n            }\n            return h(\"option\", { value: index }, option);\n        }\n        if (selected === index) {\n            return (h(\"option\", { value: option.index, selected: true }, option.name));\n        }\n        return h(\"option\", { value: option.index }, option.name);\n    })));\n}\n","import { h } from 'preact';\nimport { isString, noop } from '@ch1/utility';\nexport function SelectMultiple({ onChange, onClick, options, selected, }) {\n    const change = e => onChange(selectedOptionsToArray(e.target.options));\n    onClick = onClick || noop;\n    const optClick = (e) => onClick(e.target.value);\n    return (h(\"select\", { onChange: change, multiple: true }, options.map((option, index) => {\n        const key = 'option-' + option;\n        if (isString(option)) {\n            if (selected.indexOf(index) > -1) {\n                return (h(\"option\", { key: key, onClick: optClick, value: index, selected: true }, option));\n            }\n            return (h(\"option\", { key: key, onClick: optClick, value: index }, option));\n        }\n        if (selected.indexOf(option.index) > -1) {\n            return (h(\"option\", { key: key, onClick: optClick, value: option.index, selected: true }, option.name));\n        }\n        return (h(\"option\", { key: key, onClick: optClick, value: option.index }, option.name));\n    })));\n}\nfunction selectedOptionsToArray(options) {\n    let results = [];\n    for (let i = 0; i < options.length; i += 1) {\n        const opt = options[i];\n        if (opt.selected) {\n            results.push(opt.value);\n        }\n    }\n    return results;\n}\n","import { h } from 'preact';\nexport function InputDate({ onChange, ymdString, }) {\n    return (h(\"input\", { onChange: (e) => onChange(e.target.value), type: \"date\", value: ymdString }));\n}\n","import { h } from 'preact';\nexport function Button({ classes, isDisabled, label, onClick, }) {\n    const classString = classes ? classes.join(' ') : '';\n    return (h(\"button\", { className: classString, onClick: onClick, disabled: isDisabled }, label));\n}\n","import { h } from 'preact';\nimport { noop } from '@ch1/utility';\nexport function InputString({ classes, listenKeyUp, onChange, placeholder, value, }) {\n    const classString = classes ? classes.join(' ') : '';\n    const change = (e) => onChange(e.target.value);\n    const keyUp = listenKeyUp ? change : noop;\n    return (h(\"input\", { className: classString, onChange: change, onKeyUp: keyUp, placeholder: placeholder || '', type: \"text\", value: value }));\n}\n","import { h } from 'preact';\nimport { InputString } from './string';\nimport { SelectMultiple } from './select-multiple';\nimport { flexCol, flex } from '../constants';\nimport { isString, noop } from '@ch1/utility';\nimport { Button } from './button';\nimport { isMobile } from '../utility';\nfunction getOptions(props) {\n    if (props.filter) {\n        return props.options.filter(option => {\n            if (isString(option)) {\n                if (option.toLowerCase().indexOf(props.filter.toLowerCase()) > -1) {\n                    return true;\n                }\n                return false;\n            }\n            else {\n                if (option.name.toLowerCase().indexOf(props.filter.toLowerCase()) > -1) {\n                    return true;\n                }\n                return false;\n            }\n        });\n    }\n    else {\n        return props.options;\n    }\n}\nexport function SelectMultipleFilter(props) {\n    const givenClasses = props.classes ? props.classes.join(' ') : '';\n    const className = givenClasses.length\n        ? `${givenClasses} ${flexCol}`\n        : flexCol;\n    const onChange = (selected) => {\n        props.onChange(selected);\n    };\n    const onDeselect = (index) => {\n        props.onDeselect(index);\n    };\n    return (h(\"div\", { className: className },\n        h(\"div\", { className: flex },\n            isMobile() ? ('') : (h(InputString, { listenKeyUp: true, onChange: props.onUpdateFilter, placeholder: \"filter\", value: props.filter })),\n            h(Button, { label: \"\\u2717\", onClick: props.onClear })),\n        isMobile() ? (h(SelectMultiple, { onChange: onChange, options: getOptions(props), selected: props.selected })) : (h(SelectMultiple, { onChange: noop, onClick: onDeselect, options: getOptions(props), selected: props.selected }))));\n}\n","import { h } from 'preact';\nimport { Select } from '../components/select';\nimport { SelectMultiple } from '../components/select-multiple';\nimport { InputDate } from '../components/date';\nimport { Button } from '../components/button';\nimport { flex, flexCol, flexItem20, highlight } from '../constants';\nimport { SelectMultipleFilter } from '../components/select-multiple-filter';\nimport { filterStates } from '../utility';\nexport function TimeVsCountsControls({ clearCountries, countries, countryKeys, onChange, onUpdateCountryFilter, reload, selectCountry, selectCountries, state, strings, }) {\n    const dataSets = [\n        strings.series.activeCases,\n        strings.series.confirmedCases,\n        strings.series.deaths,\n        strings.series.recoveries,\n        strings.series.newConfirmed,\n        strings.series.newDeaths,\n        strings.series.estimatedActiveCases,\n        strings.series.projectionSeirActive,\n        strings.series.projectionSeirDeaths,\n        strings.series.projectionSeirRecoveries,\n    ];\n    const modes = [\n        strings.modes.byDate,\n        strings.modes.byFirst,\n        strings.modes.byFirst100,\n    ];\n    const scaleTypes = [\n        strings.scaleTypes.linear,\n        strings.scaleTypes.logarithmic,\n    ];\n    const showStates = strings.states;\n    const metrics = [strings.metrics.byValue, strings.metrics.byPercent];\n    function selectMode(mode) {\n        onChange(Object.assign(Object.assign({}, state), { mode: parseInt(mode + '', 10) }));\n    }\n    function selectDate(ymdString) {\n        onChange(Object.assign(Object.assign({}, state), { startDate: ymdString }));\n    }\n    function selectDataSets(dataSetIndexes) {\n        onChange(Object.assign(Object.assign({}, state), { dataSetIndexes: dataSetIndexes.map(d => parseInt(d + '', 10)) }));\n    }\n    function selectScaleType(scaleType) {\n        onChange(Object.assign(Object.assign({}, state), { scaleType: parseInt(scaleType + '', 10) }));\n    }\n    function selectShowStates(showOrHide) {\n        onChange(Object.assign(Object.assign({}, state), { showStates: parseInt(showOrHide + '', 10) === 0 ? false : true }));\n    }\n    function selectMetric(metric) {\n        onChange(Object.assign(Object.assign({}, state), { byMetric: parseInt(metric + '', 10) }));\n    }\n    return (h(\"section\", { className: `${flex} ${flexItem20}` },\n        h(\"section\", { className: flexCol },\n            h(Select, { onChange: selectMode, options: modes, selected: state.mode }),\n            h(Select, { onChange: selectScaleType, options: scaleTypes, selected: state.scaleType }),\n            h(InputDate, { onChange: selectDate, ymdString: state.startDate })),\n        h(SelectMultiple, { onChange: selectDataSets, options: dataSets, selected: state.dataSetIndexes }),\n        h(SelectMultipleFilter, { classes: countryKeys.length === 0 ? [highlight] : [], filter: state.countryFilter, onUpdateFilter: onUpdateCountryFilter, onChange: selectCountries, onClear: clearCountries, onDeselect: selectCountry, options: countries.filter(filterStates(state.showStates, strings)), selected: countryKeys }),\n        h(\"div\", { className: flexCol },\n            h(Select, { onChange: selectShowStates, options: showStates, selected: state.showStates ? 1 : 0 }),\n            h(Select, { onChange: selectMetric, options: metrics, selected: state.byMetric }),\n            h(Button, { label: strings.timeVsCounts.reload, onClick: reload }))));\n}\n","import { h } from 'preact';\nimport { Button } from './button';\nexport function ButtonToggle({ classes, isDisabled, labelFalse, labelTrue, onClick, state, }) {\n    return (h(Button, { classes: classes, isDisabled: isDisabled, label: state ? labelTrue : labelFalse, onClick: () => onClick(state ? false : true) }));\n}\n","import { h } from 'preact';\nimport { flex } from '../constants';\nimport { Button } from './button';\nexport function Menu({ config: { disable, labels, onClick, selected }, }) {\n    return (h(\"nav\", { className: flex }, labels.map((label, i) => {\n        return (h(Button, { isDisabled: i === selected || disable, label: label, onClick: () => onClick(i) }));\n    })));\n}\n","import { Component, h } from 'preact';\nimport { Chart } from '../components/chart';\nimport { flexCol, fullSize, flexItem60, flexItem95, flex } from '../constants';\nimport { TimeVsCountsControls } from './time-vs-counts-controls';\nimport { ButtonToggle } from '../components/button-toggle';\nimport { Menu } from '../components/menu';\nexport class TimeVsCount extends Component {\n    constructor() {\n        super();\n        this.state = {};\n    }\n    useDays() {\n        if (this.props.state.mode !== 0) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    toggleConfig(v) {\n        this.props.onChange(Object.assign(Object.assign({}, this.props.state), { isConfigOpen: v }));\n    }\n    setCountryFilter(filter) {\n        this.props.onChange(Object.assign(Object.assign({}, this.props.state), { countryFilter: filter }));\n    }\n    render() {\n        const classes = this.props.state.isConfigOpen === false &&\n            this.props.countryKeys.length === 0\n            ? ['green']\n            : [];\n        const customTicks = [\n            {\n                // A tick for every month.\n                value: {\n                    month: '*',\n                },\n                label_text: '%min',\n            },\n            {\n                // every month\n                value: { week: '*' },\n                label_text: '%min',\n            },\n        ];\n        const options = {\n            xAxis_label_text: this.useDays() ? 'Day' : undefined,\n            xAxis: {\n                scale: {\n                    type: this.useDays() ? 'auto' : 'time',\n                },\n                customTicks,\n            },\n            yAxis_label_text: this.props.state.byMetric === 0\n                ? this.props.strings.timeVsCounts.people\n                : this.props.strings.timeVsCounts.percent,\n            yAxis: {\n                scale: {\n                    type: this.props.state.scaleType === 0 ? 'auto' : 'logarithmic',\n                },\n            },\n            legend: {\n                template: '%icon %name',\n            },\n            series: this.props.currentSeries,\n        };\n        return (h(\"section\", { className: `${fullSize} ${flexCol}` },\n            h(Chart, { flexSize: this.props.state.isConfigOpen ? flexItem60 : flexItem95, options: options, strings: this.props.strings }),\n            h(\"section\", { className: flex },\n                h(ButtonToggle, { classes: classes, labelTrue: this.props.strings.timeVsCounts.enlarge, labelFalse: this.props.strings.timeVsCounts.configure, onClick: this.toggleConfig.bind(this), state: this.props.state.isConfigOpen }),\n                h(Menu, { config: this.props.menu })),\n            this.props.state.isConfigOpen ? (h(TimeVsCountsControls, { onUpdateCountryFilter: this.setCountryFilter.bind(this), clearCountries: this.props.clearCountries, countryKeys: this.props.countryKeys, countries: this.props.countries, currentSeries: this.props.currentSeries, onChange: this.props.onChange, reload: this.props.reload, selectCountry: this.props.selectCountry, selectCountries: this.props.selectCountries, state: this.props.state, strings: this.props.strings })) : ('')));\n    }\n}\n","// Current active cases / per cap\n// Peak active cases / per cap\n// Deaths / per cap\n// Fatality Rate\n// GDP\n// Population Density\n// Time since first confirmed\n// Time since first 100 confirmed\nimport { usaCode } from './constants';\nexport const mapJhuCountryToPop = Object.freeze({\n    'Congo (Kinshasa)': 'The Democratic Republic of Congo',\n    \"Cote d'Ivoire\": 'Ivory Coast',\n    Czechia: 'Czech Republic',\n    Eswatini: 'Swaziland',\n    'Holy See': 'Holy See (Vatican City State)',\n    'Korea, South': 'South Korea',\n    'Republic of the Congo': 'Congo',\n    Russia: 'Russian Federation',\n    'Sri Lanka': 'SriLanka',\n    'The Bahamas': 'Bahamas',\n    'The Gambia': 'Gambia',\n    US: 'United States',\n});\n// manually source via internet march 17 2020\nexport const manuallySourcePop = Object.freeze({\n    'Bahamas, The': 395361,\n    Burma: 53370000,\n    'Cabo Verde': 546388,\n    'Congo (Brazzaville)': 1800000,\n    'Congo (Kinshasa)': 81340000,\n    'Cruise Ship': 3711,\n    'Diamond Princess': 3711,\n    Fiji: 905502,\n    'Gambia, The': 2101000,\n    Guernsey: 67052,\n    Jersey: 97857,\n    Kosovo: 1831000,\n    Libya: 6375000,\n    Montenegro: 613219,\n    Serbia: 7022000,\n    'Taiwan*': 23780000,\n    'Timor-Leste': 1296000,\n    'West Bank and Gaza': 4685000,\n});\nexport const manuallySourceStatePop = Object.freeze({\n    // manually source via internet march 22 2020 (https://en.wikipedia.org/wiki/States_and_territories_of_Australia)\n    Australia: Object.freeze({\n        'Australian Capital Territory': 426709,\n        'New South Wales': 8089526,\n        'Northern Territory': 245869,\n        Queensland: 5095100,\n        'South Australia': 1751693,\n        Tasmania: 534281,\n        Victoria: 6594804,\n        'Western Australia': 2621680,\n    }),\n    // manually source via internet march 22 2020 (https://worldpopulationreview.com/canadian-provinces/)\n    Canada: Object.freeze({\n        Alberta: 4345737,\n        'British Columbia': 5020302,\n        Ontario: 14446515,\n        Manitoba: 1360396,\n        'New Brunswick': 772094,\n        'Newfoundland and Labrador': 523790,\n        'Northwest Territories': 44598,\n        'Nova Scotia': 965382,\n        'Prince Edward Island': 154748,\n        Quebec: 8433301,\n        Saskatchewan: 1168423,\n        Yukon: 40369,\n        Nunavut: 38787,\n    }),\n    // manually source via internet march 22 2020 ((2010) https://en.wikipedia.org/wiki/List_of_Chinese_administrative_divisions_by_population)\n    China: Object.freeze({\n        Anhui: 59500510,\n        Beijing: 19612368,\n        Chongqing: 28846170,\n        Fujian: 36894216,\n        Gansu: 25575254,\n        Guangdong: 104303132,\n        Guangxi: 46026629,\n        Guizhou: 35806468,\n        Hainan: 9261518,\n        Hebei: 71854202,\n        Heilongjiang: 38312224,\n        Henan: 94023567,\n        'Hong Kong': 7061200,\n        Hubei: 57237740,\n        Hunan: 65683722,\n        'Inner Mongolia': 24706321,\n        Jiangsu: 78659903,\n        Jiangxi: 44567475,\n        Jilin: 27462297,\n        Liaoning: 43746323,\n        Macau: 552503,\n        Ningxia: 6176900,\n        Qinghai: 5626722,\n        Shaanxi: 37327378,\n        Shandong: 100063065,\n        Shanghai: 23019148,\n        Shanxi: 37022111,\n        Sichuan: 80418200,\n        Tianjin: 12938224,\n        Tibet: 3002166,\n        Xinjiang: 21813334,\n        Yunnan: 45966239,\n        Zhejiang: 54426891,\n    }),\n    // manually source via internet march 22 2020\n    Denmark: Object.freeze({\n        Denmark: 5603000,\n        'Faroe Islands': 49290,\n        Greenland: 56171,\n    }),\n    // manually source via internet march 22 2020\n    France: Object.freeze({\n        France: 66990000,\n        'French Guiana': 290691,\n        'French Polynesia': 283007,\n        Guadeloupe: 395700,\n        Mayotte: 270372,\n        'New Caledonia': 280460,\n        Reunion: 859959,\n        'Saint Barthelemy': 9131,\n        'St Martin': 32125,\n    }),\n    // manually source via internet march 22 2020\n    Netherlands: Object.freeze({\n        Aruba: 105264,\n        Curacao: 161014,\n        Netherlands: 17180000,\n        'Sint Maarten': 41109,\n    }),\n    // manually source via internet march 22 2020\n    'United Kingdom': Object.freeze({\n        'United Kingdom': 66440000,\n        Bermuda: 65441,\n        'Cayman Islands': 61559,\n        'Channel Islands': 3703,\n        Gibraltar: 34571,\n        'Isle of Man': 84287,\n        Montserrat: 5900,\n    }),\n    // manually source via internet march 22 2020 (https://github.com/jakevdp/data-USstates/blob/master/state-population.csv)\n    US: Object.freeze({\n        AL: 4833722,\n        AK: 735132,\n        AZ: 6626624,\n        AR: 2959373,\n        CA: 38332521,\n        CO: 5268367,\n        CT: 3596080,\n        DE: 925749,\n        DC: 646449,\n        FL: 19552860,\n        GA: 9992167,\n        GU: 164229,\n        HI: 1404054,\n        ID: 1612136,\n        IL: 12882135,\n        IN: 6570902,\n        IA: 3090416,\n        KS: 2893957,\n        KY: 4395295,\n        LA: 4625470,\n        ME: 1328302,\n        MD: 5928814,\n        MA: 6692824,\n        MI: 9895622,\n        MN: 5420380,\n        MS: 2991207,\n        MO: 6044171,\n        MT: 1015165,\n        NE: 1868516,\n        NV: 2790136,\n        NH: 1323459,\n        NJ: 8899339,\n        NM: 2085287,\n        NY: 19651127,\n        NC: 9848060,\n        ND: 723393,\n        OH: 11570808,\n        OK: 3850568,\n        OR: 3930065,\n        PA: 12773801,\n        RI: 1051511,\n        SC: 4774839,\n        SD: 844877,\n        TN: 6495978,\n        TX: 26448193,\n        UT: 2900872,\n        VT: 626630,\n        VA: 8260405,\n        VI: 107268,\n        WA: 6971406,\n        WV: 1854304,\n        WI: 5742713,\n        WY: 582658,\n        PR: 3615086,\n    }),\n});\nexport const countriesToCodes = Object.freeze({\n    Afghanistan: 'AF',\n    'Åland Islands': 'AX',\n    Albania: 'AL',\n    Algeria: 'DZ',\n    'American Samoa': 'AS',\n    Andorra: 'AD',\n    Angola: 'AO',\n    Anguilla: 'AI',\n    Antarctica: 'AQ',\n    'Antigua and Barbuda': 'AG',\n    Argentina: 'AR',\n    Armenia: 'AM',\n    Aruba: 'AW',\n    Australia: 'AU',\n    Austria: 'AT',\n    Azerbaijan: 'AZ',\n    Bahamas: 'BS',\n    'Bahamas, The': 'BS',\n    Bangladesh: 'BD',\n    Bahrain: 'BH',\n    Barbados: 'BB',\n    Belarus: 'BY',\n    Belgium: 'BE',\n    Belize: 'BZ',\n    Benin: 'BJ',\n    Bermuda: 'BM',\n    Bhutan: 'BT',\n    Bolivia: 'BO',\n    'Bosnia and Herzegovina': 'BA',\n    Botswana: 'BW',\n    'Bouvet Island': 'BV',\n    Brazil: 'BR',\n    'British Indian Ocean Territory': 'IO',\n    Brunei: 'BN',\n    Bulgaria: 'BG',\n    'Burkina Faso': 'BF',\n    Burma: 'MM',\n    Burundi: 'BI',\n    'Cabo Verde': 'CV',\n    Cambodia: 'KH',\n    Cameroon: 'CM',\n    Canada: 'CA',\n    'Cayman Islands': 'KY',\n    'Central African Republic': 'CF',\n    Chad: 'TD',\n    Chile: 'CL',\n    China: 'CN',\n    'Christmas Island': 'CX',\n    'Cocos (Keeling) Islands': 'CC',\n    Colombia: 'CO',\n    Comoros: 'KM',\n    Congo: 'CG',\n    'Congo (Brazzaville)': 'CG',\n    'Congo, The Democratic Republic of the': 'CD',\n    'Congo (Kinshasa)': 'CD',\n    'Cook Islands': 'CK',\n    'Costa Rica': 'CR',\n    \"Cote d'Ivoire\": 'CI',\n    Croatia: 'HR',\n    Cuba: 'CU',\n    Cyprus: 'CY',\n    Czechia: 'CZ',\n    Denmark: 'DK',\n    Djibouti: 'DJ',\n    Dominica: 'DM',\n    'Dominican Republic': 'DO',\n    Ecuador: 'EC',\n    Egypt: 'EG',\n    'El Salvador': 'SV',\n    'Equatorial Guinea': 'GQ',\n    Eritrea: 'ER',\n    Estonia: 'EE',\n    Eswatini: 'SZ',\n    Ethiopia: 'ET',\n    'Falkland Islands (Malvinas)': 'FK',\n    'Faroe Islands': 'FO',\n    Fiji: 'FJ',\n    Finland: 'FI',\n    France: 'FR',\n    'French Guiana': 'GF',\n    'French Polynesia': 'PF',\n    'French Southern Territories': 'TF',\n    Gambia: 'GM',\n    Gabon: 'GA',\n    'The, Gambia': 'GM',\n    Georgia: 'GE',\n    Germany: 'DE',\n    Ghana: 'GH',\n    Gibraltar: 'GI',\n    Greece: 'GR',\n    Greenland: 'GL',\n    Grenada: 'GD',\n    Guam: 'GU',\n    Guatemala: 'GT',\n    Guernsey: 'GG',\n    Guinea: 'GN',\n    'Guinea-Bissau': 'GW',\n    Guyana: 'GY',\n    Haiti: 'HT',\n    'Heard Island and Mcdonald Islands': 'HM',\n    'Holy See': 'VA',\n    Honduras: 'HN',\n    'Hong Kong': 'HK',\n    Hungary: 'HU',\n    Iceland: 'IS',\n    India: 'IN',\n    Indonesia: 'ID',\n    Iran: 'IR',\n    Iraq: 'IQ',\n    Ireland: 'IE',\n    'Isle of Man': 'IM',\n    Israel: 'IL',\n    Italy: 'IT',\n    Jamaica: 'JM',\n    Japan: 'JP',\n    Jersey: 'JE',\n    Jordan: 'JO',\n    Kazakhstan: 'KZ',\n    Kenya: 'KE',\n    Kosovo: 'XK',\n    Kiribati: 'KI',\n    \"Korea, Democratic People'S Republic of\": 'KP',\n    'Korea, South': 'KR',\n    Kuwait: 'KW',\n    Kyrgyzstan: 'KG',\n    \"Lao People'S Democratic Republic\": 'LA',\n    Laos: 'LA',\n    Latvia: 'LV',\n    Lebanon: 'LB',\n    Lesotho: 'LS',\n    Liberia: 'LR',\n    'Libyan Arab Jamahiriya': 'LY',\n    Liechtenstein: 'LI',\n    Libya: 'LY',\n    Lithuania: 'LT',\n    Luxembourg: 'LU',\n    Macao: 'MO',\n    'Macedonia, The Former Yugoslav Republic of': 'MK',\n    Madagascar: 'MG',\n    Malawi: 'MW',\n    Malaysia: 'MY',\n    Maldives: 'MV',\n    Mali: 'ML',\n    Malta: 'MT',\n    'Marshall Islands': 'MH',\n    Mauritania: 'MR',\n    Mauritius: 'MU',\n    Mexico: 'MX',\n    'Micronesia, Federated States of': 'FM',\n    Moldova: 'MD',\n    Monaco: 'MC',\n    Mongolia: 'MN',\n    Montenegro: 'ME',\n    Montserrat: 'MS',\n    Morocco: 'MA',\n    Mozambique: 'MZ',\n    Myanmar: 'MM',\n    Namibia: 'NA',\n    Nauru: 'NR',\n    Nepal: 'NP',\n    Netherlands: 'NL',\n    'Netherlands Antilles': 'AN',\n    'New Caledonia': 'NC',\n    'New Zealand': 'NZ',\n    Nicaragua: 'NI',\n    Niger: 'NE',\n    Nigeria: 'NG',\n    Niue: 'NU',\n    'Norfolk Island': 'NF',\n    'Northern Mariana Islands': 'MP',\n    'North Macedonia': 'MK',\n    Norway: 'NO',\n    Oman: 'OM',\n    Pakistan: 'PK',\n    Palau: 'PW',\n    'Palestinian Territory, Occupied': 'PS',\n    Panama: 'PA',\n    'Papua New Guinea': 'PG',\n    Paraguay: 'PY',\n    Peru: 'PE',\n    Philippines: 'PH',\n    Pitcairn: 'PN',\n    Poland: 'PL',\n    Portugal: 'PT',\n    'Puerto Rico': 'PR',\n    Qatar: 'QA',\n    Romania: 'RO',\n    Russia: 'RU',\n    Rwanda: 'RW',\n    'Saint Helena': 'SH',\n    'Saint Kitts and Nevis': 'KN',\n    'Saint Lucia': 'LC',\n    'Saint Pierre and Miquelon': 'PM',\n    Samoa: 'WS',\n    'San Marino': 'SM',\n    'Sao Tome and Principe': 'ST',\n    'Saudi Arabia': 'SA',\n    Senegal: 'SN',\n    Serbia: 'RS',\n    Seychelles: 'SC',\n    'Sierra Leone': 'SL',\n    Singapore: 'SG',\n    Slovakia: 'SK',\n    Slovenia: 'SI',\n    'Solomon Islands': 'SB',\n    Somalia: 'SO',\n    'South Africa': 'ZA',\n    'South Georgia and the South Sandwich Islands': 'GS',\n    Spain: 'ES',\n    'Sri Lanka': 'LK',\n    'Saint Vincent and the Grenadines': 'VC',\n    Sudan: 'SD',\n    Suriname: 'SR',\n    'Svalbard and Jan Mayen': 'SJ',\n    Swaziland: 'SZ',\n    Sweden: 'SE',\n    Switzerland: 'CH',\n    Syria: 'SY',\n    'Taiwan*': 'TW',\n    Tajikistan: 'TJ',\n    Tanzania: 'TZ',\n    Thailand: 'TH',\n    'Timor-Leste': 'TL',\n    Togo: 'TG',\n    Tokelau: 'TK',\n    Tonga: 'TO',\n    'Trinidad and Tobago': 'TT',\n    Tunisia: 'TN',\n    Turkey: 'TR',\n    Turkmenistan: 'TM',\n    'Turks and Caicos Islands': 'TC',\n    Tuvalu: 'TV',\n    Uganda: 'UG',\n    Ukraine: 'UA',\n    'United Arab Emirates': 'AE',\n    'United Kingdom': 'GB',\n    US: usaCode,\n    'United States Minor Outlying Islands': 'UM',\n    Uruguay: 'UY',\n    Uzbekistan: 'UZ',\n    Vanuatu: 'VU',\n    Venezuela: 'VE',\n    Vietnam: 'VN',\n    'Virgin Islands, British': 'VG',\n    'Virgin Islands, U.S.': 'VI',\n    'Wallis and Futuna': 'WF',\n    'Western Sahara': 'EH',\n    Yemen: 'YE',\n    Zambia: 'ZM',\n    Zimbabwe: 'ZW',\n    'West Bank and Gaza': 'PO',\n});\nexport const statesToCodes = Object.freeze({\n    Australia: Object.freeze({\n        'Australian Capital Territory': 'AC',\n        'New South Wales': 'NS',\n        'Northern Territory': 'NT',\n        Queensland: 'QL',\n        'South Australia': 'SA',\n        Tasmania: 'TS',\n        Victoria: 'VI',\n        'Western Australia': 'WA',\n    }),\n    // manually source via internet march 22 2020 (https://worldpopulationreview.com/canadian-provinces/)\n    Canada: Object.freeze({\n        Alberta: 'AB',\n        'British Columbia': 'BC',\n        Ontario: 'ON',\n        Manitoba: 'MB',\n        'New Brunswick': 'NB',\n        'Newfoundland and Labrador': 'NF',\n        'Northwest Territories': 'NT',\n        'Nova Scotia': 'NS',\n        'Prince Edward Island': 'PE',\n        Quebec: 'QC',\n        Saskatchewan: 'SK',\n        Yukon: 'YT',\n        Nunavut: 'NU',\n    }),\n    // manually source via internet march 22 2020 ((2010) https://en.wikipedia.org/wiki/List_of_Chinese_administrative_divisions_by_population)\n    China: Object.freeze({\n        Anhui: 'AH',\n        Beijing: 'BJ',\n        Chongqing: 'CQ',\n        Fujian: 'FJ',\n        Gansu: 'GS',\n        Guangdong: 'GD',\n        Guangxi: 'GX',\n        Guizhou: 'GZ',\n        Hainan: 'HA',\n        Hebei: 'HB',\n        Heilongjiang: 'HL',\n        Henan: 'HE',\n        'Hong Kong': 'HK',\n        Hubei: 'HU',\n        Hunan: 'HN',\n        'Inner Mongolia': 'NM',\n        Jiangsu: 'JS',\n        Jiangxi: 'JX',\n        Jilin: 'JL',\n        Liaoning: 'LN',\n        Macau: 'MO',\n        Ningxia: 'NX',\n        Qinghai: 'QH',\n        Shaanxi: 'SA',\n        Shandong: 'SD',\n        Shanghai: 'SH',\n        Shanxi: 'SX',\n        Sichuan: 'SC',\n        Tianjin: 'TJ',\n        Tibet: 'AR',\n        Xinjiang: 'XJ',\n        Yunnan: 'YN',\n        Zhejiang: 'ZJ',\n    }),\n    US: Object.freeze({\n        AL: 'Alabama',\n        AK: 'Alaska',\n        AS: 'American Samoa',\n        AZ: 'Arizona',\n        AR: 'Arkansas',\n        CA: 'California',\n        CO: 'Colorado',\n        CT: 'Connecticut',\n        DC: 'District of Columbia',\n        DE: 'Delaware',\n        'D.C.': 'District of Columbia',\n        FM: 'Federated States Of Micronesia',\n        FL: 'Florida',\n        GA: 'Georgia',\n        GU: 'Guam',\n        HI: 'Hawaii',\n        ID: 'Idaho',\n        IL: 'Illinois',\n        IN: 'Indiana',\n        IA: 'Iowa',\n        KS: 'Kansas',\n        KY: 'Kentucky',\n        LA: 'Louisiana',\n        ME: 'Maine',\n        MH: 'Marshall Islands',\n        MD: 'Maryland',\n        MA: 'Massachusetts',\n        MI: 'Michigan',\n        MN: 'Minnesota',\n        MS: 'Mississippi',\n        MO: 'Missouri',\n        MT: 'Montana',\n        NE: 'Nebraska',\n        NV: 'Nevada',\n        NH: 'New Hampshire',\n        NJ: 'New Jersey',\n        NM: 'New Mexico',\n        NY: 'New York',\n        NC: 'North Carolina',\n        ND: 'North Dakota',\n        MP: 'Northern Mariana Islands',\n        OH: 'Ohio',\n        OK: 'Oklahoma',\n        OR: 'Oregon',\n        PW: 'Palau',\n        PA: 'Pennsylvania',\n        PR: 'Puerto Rico',\n        RI: 'Rhode Island',\n        SC: 'South Carolina',\n        SD: 'South Dakota',\n        TN: 'Tennessee',\n        TX: 'Texas',\n        UT: 'Utah',\n        VT: 'Vermont',\n        VI: 'Virgin Islands',\n        VA: 'Virginia',\n        WA: 'Washington',\n        WV: 'West Virginia',\n        WI: 'Wisconsin',\n        WY: 'Wyoming',\n    }),\n});\nexport const countriesToContinents = Object.freeze({\n    Afghanistan: 'Asia',\n    Albania: 'Europe',\n    Algeria: 'Africa',\n    Andorra: 'Europe',\n    Angola: 'Africa',\n    Argentina: 'South America',\n    Armenia: 'Asia',\n    Australia: 'Oceania',\n    Austria: 'Europe',\n    Azerbaijan: 'Asia',\n    'Bahamas, The': 'North America',\n    Bangladesh: 'Asia',\n    Belarus: 'Europe',\n    Belgium: 'Europe',\n    Benin: 'Africa',\n    Bhutan: 'Asia',\n    Bolivia: 'South America',\n    'Bosnia and Herzegovina': 'Europe',\n    Brazil: 'South America',\n    Brunei: 'Asia',\n    Bulgaria: 'Europe',\n    'Burkina Faso': 'Africa',\n    Cambodia: 'Asia',\n    Cameroon: 'Africa',\n    Canada: 'North America',\n    'Central African Republic': 'Africa',\n    Chad: 'Africa',\n    Chile: 'South America',\n    China: 'Asia',\n    Colombia: 'South America',\n    'Costa Rica': 'North America',\n    \"Cote d'Ivoire\": 'Africa',\n    Croatia: 'Europe',\n    Cuba: 'North America',\n    Cyprus: 'Asia',\n    Czechia: 'Europe',\n    Denmark: 'Europe',\n    Djibouti: 'Africa',\n    'Dominican Republic': 'North America',\n    Ecuador: 'South America',\n    Egypt: 'Africa',\n    'El Salvador': 'North America',\n    'Equatorial Guinea': 'Africa',\n    Eritrea: 'Africa',\n    Estonia: 'Europe',\n    Ethiopia: 'Africa',\n    Fiji: 'Oceania',\n    Finland: 'Europe',\n    France: 'Europe',\n    Gabon: 'Africa',\n    Georgia: 'Asia',\n    Germany: 'Europe',\n    Ghana: 'Africa',\n    Greece: 'Europe',\n    Guatemala: 'North America',\n    Guinea: 'Africa',\n    Guyana: 'South America',\n    Haiti: 'North America',\n    Honduras: 'North America',\n    Hungary: 'Europe',\n    Iceland: 'Europe',\n    India: 'Asia',\n    Indonesia: 'Asia',\n    Iran: 'Asia',\n    Iraq: 'Asia',\n    Ireland: 'Europe',\n    Israel: 'Asia',\n    Italy: 'Europe',\n    Jamaica: 'North America',\n    Japan: 'Asia',\n    Jordan: 'Asia',\n    Kazakhstan: 'Asia',\n    Kenya: 'Africa',\n    'Korea, South': 'Asia',\n    Kuwait: 'Asia',\n    Kyrgyzstan: 'Asia',\n    Latvia: 'Europe',\n    Lebanon: 'Asia',\n    Liberia: 'Africa',\n    Liechtenstein: 'Europe',\n    Lithuania: 'Europe',\n    Luxembourg: 'Europe',\n    Madagascar: 'Africa',\n    Malaysia: 'Asia',\n    Mauritania: 'Africa',\n    Mexico: 'North America',\n    Moldova: 'Europe',\n    Monaco: 'Europe',\n    Mongolia: 'Asia',\n    Morocco: 'Africa',\n    Mozambique: 'Africa',\n    Namibia: 'Africa',\n    Nepal: 'Asia',\n    Netherlands: 'Europe',\n    'New Zealand': 'Oceania',\n    Nicaragua: 'North America',\n    Niger: 'Africa',\n    Nigeria: 'Africa',\n    Norway: 'Europe',\n    Oman: 'Asia',\n    Pakistan: 'Asia',\n    Panama: 'North America',\n    'Papua New Guinea': 'Oceania',\n    Paraguay: 'South America',\n    Peru: 'South America',\n    Philippines: 'Asia',\n    Poland: 'Europe',\n    Portugal: 'Europe',\n    Qatar: 'Asia',\n    Romania: 'Europe',\n    Russia: 'Asia',\n    Rwanda: 'Africa',\n    'San Marino': 'Europe',\n    'Saudi Arabia': 'Asia',\n    Senegal: 'Africa',\n    Slovakia: 'Europe',\n    Slovenia: 'Europe',\n    Somalia: 'Africa',\n    'South Africa': 'Africa',\n    Spain: 'Europe',\n    'Sri Lanka': 'Asia',\n    Sudan: 'Africa',\n    Suriname: 'South America',\n    Sweden: 'Europe',\n    Switzerland: 'Europe',\n    Syria: 'Asia',\n    'Taiwan*': 'Asia',\n    Tanzania: 'Africa',\n    Thailand: 'Asia',\n    Togo: 'Africa',\n    'Trinidad and Tobago': 'North America',\n    Tunisia: 'Africa',\n    Turkey: 'Asia',\n    US: 'North America',\n    Uganda: 'Africa',\n    Ukraine: 'Europe',\n    'United Arab Emirates': 'Asia',\n    'United Kingdom': 'Europe',\n    Uruguay: 'South America',\n    Uzbekistan: 'Asia',\n    Venezuela: 'South America',\n    Vietnam: 'Asia',\n    Zambia: 'Africa',\n    Zimbabwe: 'Africa',\n});\nexport const usStateCodeByName = Object.freeze((function () {\n    const stateCodes = Object.keys(statesToCodes.US);\n    return stateCodes.reduce((nameToCode, code) => {\n        nameToCode[statesToCodes.US[code]] = code;\n        return nameToCode;\n    }, {});\n})());\nexport const excludeFromMap = {\n    '': true,\n    AG: true,\n    BB: true,\n    BH: true,\n    'CN.HK': 'HK',\n    'CN.MO': 'MO',\n    CV: true,\n    DM: true,\n    GD: true,\n    KN: true,\n    LC: true,\n    MT: true,\n    MU: true,\n    MV: true,\n    PO: true,\n    TL: 'TP',\n    SC: true,\n    SG: true,\n    'US.GU': true,\n    'US.PR': true,\n    'US.VI': true,\n    VC: true,\n};\n","export class TimeSeries {\n    constructor(data) {\n        this.data = data;\n    }\n    static create(locationSeries) {\n        return new TimeSeries(locationSeries);\n    }\n    lastValue(prop) {\n        if (this.data.counts.length < 1) {\n            return 0;\n        }\n        return this.data.counts[this.data.counts.length - 1][prop];\n    }\n    lastPercent(prop) {\n        if (this.data.counts.length < 1) {\n            return 0;\n        }\n        if (this.data.population < 1) {\n            return 0;\n        }\n        return ((this.data.counts[this.data.counts.length - 1][prop] /\n            this.data.population) *\n            100);\n    }\n    peakValue(prop) {\n        if (this.data.counts.length < 1) {\n            return 0;\n        }\n        return this.data.counts.reduce((max, next) => {\n            if (next[prop] && next[prop] > max) {\n                return next[prop];\n            }\n            return max;\n        }, 0);\n    }\n    peakPercent(prop) {\n        if (this.data.counts.length < 1) {\n            return 0;\n        }\n        if (this.data.population < 1) {\n            return 0;\n        }\n        return this.data.counts.reduce((max, next) => {\n            if (next[prop]) {\n                const div = (next[prop] / this.data.population) * 100;\n                if (div > max) {\n                    return div;\n                }\n            }\n            return max;\n        }, 0);\n    }\n    lastActive() {\n        return this.lastValue('active');\n    }\n    lastActivePercent() {\n        return this.lastPercent('active');\n    }\n    lastConfirmed() {\n        return this.lastValue('confirmed');\n    }\n    lastConfirmedPercent() {\n        return this.lastPercent('confirmed');\n    }\n    lastDeaths() {\n        return this.lastValue('deaths');\n    }\n    lastDeathsPercent() {\n        return this.lastPercent('deaths');\n    }\n    lastRecoveries() {\n        return this.lastValue('recoveries');\n    }\n    lastRecoveriesPercent() {\n        return this.lastPercent('recoveries');\n    }\n    lastMortality() {\n        if (this.lastValue('confirmed') < 1) {\n            return 0;\n        }\n        return (this.lastValue('deaths') / this.lastValue('confirmed')) * 100;\n    }\n    lastNewConfirmed() {\n        return this.lastValue('newConfirmed');\n    }\n    lastNewDeaths() {\n        return this.lastValue('newDeaths');\n    }\n    peakActive() {\n        return this.peakValue('active');\n    }\n    peakActivePercent() {\n        return this.peakPercent('active');\n    }\n    peakConfirmed() {\n        return this.peakValue('confirmed');\n    }\n    peakConfirmedPercent() {\n        return this.peakPercent('confirmed');\n    }\n    peakDeaths() {\n        return this.peakValue('deaths');\n    }\n    peakDeathsPercent() {\n        return this.peakPercent('deaths');\n    }\n    peakRecoveries() {\n        return this.peakValue('recoveries');\n    }\n    peakRecoveriesPercent() {\n        return this.peakPercent('recoveries');\n    }\n    peakMortality() {\n        if (this.peakValue('confirmed') < 1) {\n            return 0;\n        }\n        return (this.peakValue('deaths') / this.peakValue('confirmed')) * 100;\n    }\n    peakNewConfirmed() {\n        return this.peakValue('newConfirmed');\n    }\n    peakNewDeaths() {\n        return this.peakValue('newDeaths');\n    }\n    counts() {\n        return this.data.counts;\n    }\n    dates() {\n        return this.data.dates;\n    }\n    country() {\n        return this.data.country;\n    }\n    countryCode() {\n        return this.data.countryCode;\n    }\n    countryName() {\n        return this.data.country + (this.data.state ? ', ' + this.data.state : '');\n    }\n    key() {\n        return this.data.key;\n    }\n    locale() {\n        return this.data.locale;\n    }\n    population() {\n        return this.data.population;\n    }\n    populationDensity() {\n        return this.data.populationDensity;\n    }\n    state() {\n        return this.data.state;\n    }\n    stateCode() {\n        return this.data.stateCode;\n    }\n    formatName() {\n        return this.country() + (this.state() ? ', ' + this.state() : '');\n    }\n}\nexport class TimeSeriesArray extends Array {\n    static create() {\n        return new TimeSeriesArray();\n    }\n    constructor() {\n        super();\n    }\n    sortByProp(prop, asc = true) {\n        const ret = asc ? -1 : 1;\n        this.sort((a, b) => {\n            if (a[prop]() < b[prop]()) {\n                return ret;\n            }\n            if (a[prop]() > b[prop]()) {\n                return ret * -1;\n            }\n            return 0;\n        });\n    }\n    clone() {\n        const ns = TimeSeriesArray.create();\n        this.forEach(el => ns.push(el));\n        return ns;\n    }\n    sortByActive(asc = true) {\n        this.sortByProp('lastActive', asc);\n    }\n    sortByActivePercent(asc = true) {\n        this.sortByProp('lastActivePercent', asc);\n    }\n    sortByConfirmed(asc = true) {\n        this.sortByProp('lastConfirmed', asc);\n    }\n    sortByNewConfirmed(asc = true) {\n        this.sortByProp('lastNewConfirmed', asc);\n    }\n    sortByPeakNewConfirmed(asc = true) {\n        this.sortByProp('peakNewConfirmed', asc);\n    }\n    sortByConfirmedPercent(asc = true) {\n        this.sortByProp('lastConfirmedPercent', asc);\n    }\n    sortByPeakActive(asc = true) {\n        this.sortByProp('peakActive', asc);\n    }\n    sortByPeakActivePercent(asc = true) {\n        this.sortByProp('peakActivePercent', asc);\n    }\n    sortByPeakConfirmed(asc = true) {\n        this.sortByProp('peakConfirmed', asc);\n    }\n    sortByPeakConfirmedPercent(asc = true) {\n        this.sortByProp('peakConfirmedPercent', asc);\n    }\n    sortByCountry(asc = true) {\n        this.sort((a, b) => {\n            if (a.country() < b.country()) {\n                return -1;\n            }\n            if (a.country() > b.country()) {\n                return 1;\n            }\n            if (a.state() < b.state()) {\n                return -1;\n            }\n            if (a.state() > b.state()) {\n                return 1;\n            }\n            if (a.locale() < b.locale()) {\n                return -1;\n            }\n            if (a.locale() > b.locale()) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n    sortByDeaths(asc = true) {\n        this.sortByProp('lastDeaths', asc);\n    }\n    sortByNewDeaths(asc = true) {\n        this.sortByProp('lastNewDeaths', asc);\n    }\n    sortByPeakNewDeaths(asc = true) {\n        this.sortByProp('peakNewDeaths', asc);\n    }\n    sortByMortality(asc = true) {\n        this.sortByProp('lastMortality', asc);\n    }\n    sortByDeathsPercent(asc = true) {\n        this.sortByProp('lastDeathsPercent', asc);\n    }\n    sortByPopulation(asc = true) {\n        this.sortByProp('population', asc);\n    }\n    sortByPopulationDensity(asc = true) {\n        this.sortByProp('populationDensity', asc);\n    }\n    sortByRecoveries(asc = true) {\n        this.sortByProp('lastRecoveries', asc);\n    }\n    sortByRecoveriesPercent(asc = true) {\n        this.sortByProp('lastRecoveriesPercent', asc);\n    }\n    sortByPeakDeaths(asc = true) {\n        this.sortByProp('peakDeaths', asc);\n    }\n    sortByPeakMortality(asc = true) {\n        this.sortByProp('peakMortality', asc);\n    }\n    sortByPeakDeathsPercent(asc = true) {\n        this.sortByProp('peakDeathsPercent', asc);\n    }\n    sortByPeakPopulation(asc = true) {\n        this.sortByProp('population', asc);\n    }\n    sortByPeakRecoveries(asc = true) {\n        this.sortByProp('peakRecoveries', asc);\n    }\n    sortByPeakRecoveriesPercent(asc = true) {\n        this.sortByProp('peakRecoveriesPercent', asc);\n    }\n}\nexport function createTimeSeriesCount() {\n    return {\n        active: 0,\n        confirmed: 0,\n        deaths: 0,\n        newConfirmed: 0,\n        newDeaths: 0,\n        recoveries: 0,\n        projectionReverseDeath: 0,\n    };\n}\n","// This code is entirely based on https://github.com/gabgoh/epcalc/blob/master/src/App.svelte\n// which is currently (ostensibly) public domain\n//\nconst Integrators = Object.freeze({\n    Euler: [[1]],\n    Midpoint: [\n        [0.5, 0.5],\n        [0, 1],\n    ],\n    Heun: [\n        [1, 1],\n        [0.5, 0.5],\n    ],\n    Ralston: [\n        [2 / 3, 2 / 3],\n        [0.25, 0.75],\n    ],\n    K3: [\n        [0.5, 0.5],\n        [1, -1, 2],\n        [1 / 6, 2 / 3, 1 / 6],\n    ],\n    SSP33: [\n        [1, 1],\n        [0.5, 0.25, 0.25],\n        [1 / 6, 1 / 6, 2 / 3],\n    ],\n    SSP43: [\n        [0.5, 0.5],\n        [1, 0.5, 0.5],\n        [0.5, 1 / 6, 1 / 6, 1 / 6],\n        [1 / 6, 1 / 6, 1 / 6, 1 / 2],\n    ],\n    RK4: [\n        [0.5, 0.5],\n        [0.5, 0, 0.5],\n        [1, 0, 0, 1],\n        [1 / 6, 1 / 3, 1 / 3, 1 / 6],\n    ],\n    RK38: [\n        [1 / 3, 1 / 3],\n        [2 / 3, -1 / 3, 1],\n        [1, 1, -1, 1],\n        [1 / 8, 3 / 8, 3 / 8, 1 / 8],\n    ],\n});\nfunction integrate(m, f, y, t, h) {\n    for (var k = [], ki = 0; ki < m.length; ki++) {\n        var _y = y.slice(), dt = ki ? m[ki - 1][0] * h : 0;\n        for (var l = 0; l < _y.length; l++)\n            for (var j = 1; j <= ki; j++)\n                _y[l] = _y[l] + h * m[ki - 1][j] * k[ki - 1][l];\n        k[ki] = f(t + dt, _y, dt);\n    }\n    for (var r = y.slice(), l = 0; l < _y.length; l++)\n        for (var j = 0; j < k.length; j++)\n            r[l] = r[l] + h * k[j][l] * m[ki - 1][j];\n    return r;\n}\nexport class Seir {\n    constructor(N = 7000000, I0 = 1, InterventionTime = 100) {\n        this.N = N;\n        this.I0 = I0;\n        this.InterventionTime = InterventionTime;\n        this.dt = 2;\n        this.R0 = 2.2;\n        this.D_incbation = 5.2;\n        this.D_infectious = 2.9;\n        this.D_recovery_mild = 14 - 2.9;\n        this.D_hospital_lag = 5;\n        this.D_recovery_severe = 31.5 - 2.9;\n        this.Time_to_death = 32;\n        this.D_death = this.Time_to_death - this.D_infectious;\n        this.P_SEVERE = 0.2;\n        this.CFR = 0.02;\n        this.OMInterventionAmt = 0.63;\n        this.InterventionAmt = 1 - this.OMInterventionAmt;\n        this.duration = 7 * 12 * 1e10;\n    }\n    static create(population = 7000000, I0 = 1, interventionTime = 100) {\n        return new Seir(population, I0, interventionTime);\n    }\n    getSolution() {\n        const interpolation_steps = 40;\n        let steps = 110 * interpolation_steps;\n        const dt = this.dt / interpolation_steps;\n        const sample_step = interpolation_steps;\n        const method = Integrators.RK4;\n        const f = (t, x) => {\n            // SEIR ODE\n            if (t > this.InterventionTime &&\n                t < this.InterventionTime + this.duration) {\n                var beta = (this.InterventionAmt * this.R0) / this.D_infectious;\n            }\n            else if (t > this.InterventionTime + this.duration) {\n                var beta = (0.5 * this.R0) / this.D_infectious;\n            }\n            else {\n                var beta = this.R0 / this.D_infectious;\n            }\n            const a = 1 / this.D_incbation;\n            const gamma = 1 / this.D_infectious;\n            const S = x[0]; // Susectable\n            const E = x[1]; // Exposed\n            const I = x[2]; // Infectious\n            const Mild = x[3]; // Recovering (Mild)\n            const Severe = x[4]; // Recovering (Severe at home)\n            const Severe_H = x[5]; // Recovering (Severe in hospital)\n            const Fatal = x[6]; // Recovering (Fatal)\n            const p_severe = this.P_SEVERE;\n            const p_fatal = this.CFR;\n            const p_mild = 1 - this.P_SEVERE - this.CFR;\n            const dS = -beta * I * S;\n            const dE = beta * I * S - a * E;\n            const dI = a * E - gamma * I;\n            const dMild = p_mild * gamma * I - (1 / this.D_recovery_mild) * Mild;\n            const dSevere = p_severe * gamma * I - (1 / this.D_hospital_lag) * Severe;\n            const dSevere_H = (1 / this.D_hospital_lag) * Severe -\n                (1 / this.D_recovery_severe) * Severe_H;\n            const dFatal = p_fatal * gamma * I - (1 / this.D_death) * Fatal;\n            const dR_Mild = (1 / this.D_recovery_mild) * Mild;\n            const dR_Severe = (1 / this.D_recovery_severe) * Severe_H;\n            const dR_Fatal = (1 / this.D_death) * Fatal;\n            //      0   1   2   3      4        5          6       7        8          9\n            return [\n                dS,\n                dE,\n                dI,\n                dMild,\n                dSevere,\n                dSevere_H,\n                dFatal,\n                dR_Mild,\n                dR_Severe,\n                dR_Fatal,\n            ];\n        };\n        let v = [1 - this.I0 / this.N, 0, this.I0 / this.N, 0, 0, 0, 0, 0, 0, 0];\n        let t = 0;\n        const P = [];\n        const TI = [];\n        const Iters = [];\n        while (steps--) {\n            if ((steps + 1) % sample_step == 0) {\n                //    Dead   Hospital          Recovered        Infectious   Exposed\n                P.push([\n                    this.N * v[9],\n                    this.N * (v[5] + v[6]),\n                    this.N * (v[7] + v[8]),\n                    this.N * v[2],\n                    this.N * v[1],\n                ]);\n                Iters.push(v);\n                TI.push(this.N * (1 - v[0]));\n            }\n            v = integrate(method, f, v, t, dt);\n            t += dt;\n        }\n        return {\n            P: P,\n            deaths: this.N * v[6],\n            total: 1 - v[0],\n            total_infected: TI,\n            Iters: Iters,\n            dIters: f,\n        };\n    }\n}\n","import { reverseDeathProjectionDefaults, projectionPalette, basePalette, recoveryDays, jhuStartDay, twentyFourSeven, usaCode, } from './constants';\nimport rawPopulationData from 'country-json/src/country-by-population.json';\nimport rawPopulationDensityData from 'country-json/src/country-by-population-density.json';\nimport { objReduce, objEach } from '@ch1/utility';\nimport { mapJhuCountryToPop, manuallySourcePop, usStateCodeByName, manuallySourceStatePop, countriesToCodes, statesToCodes, } from './data-maps';\nimport { log } from './utility';\nimport { createTimeSeriesCount, TimeSeries, TimeSeriesArray, } from './time-series';\nimport { Seir } from './seir';\nconst populationDictionary = (rawPopulationData || []).reduce((p, node) => {\n    p[node.country] = parseInt(node.population, 10);\n    return p;\n}, {});\nconst populationDensityDictionary = (rawPopulationDensityData || []).reduce((p, node) => {\n    p[node.country] = node.density === null ? null : parseInt(node.density, 10);\n    return p;\n}, {});\nconst jhuUrls = [\n    // updated from previous deprecated files (https://github.com/CSSEGISandData/COVID-19/commit/203881b83c3820521f5af7cafb0d15367e415652)\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv',\n];\nconst nytUrl = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv';\nexport function fetchData(strings) {\n    return Promise.all([\n        Promise.all(jhuUrls.map(url => fetch(url)))\n            .then(unwrapResponses)\n            .then(convertAllJhuCsvToStructured(strings))\n            .then(convertToCountryDictionary(strings))\n            .then(manuallyAdjust),\n        fetch(nytUrl)\n            .then(unwrapResponse)\n            .then(convertNytCsvToStructured),\n    ])\n        .then(mergeNytIntoJhu)\n        .then(interpolateRecoveriesActiveCasesAndNewProps(strings))\n        .then(sumAllRegions(strings))\n        .then(sumWorld(strings))\n        .then(toITimeSeries)\n        .then(extractCountries);\n}\nfunction manuallyAdjust(dict) {\n    // there will be some initial data that needs correction to keep things organized\n    // there is no top level entry for Canadian confirmed cases or deaths, this minimal recovery data\n    delete dict.CA;\n    return dict;\n}\nfunction mergeNytIntoJhu([jhu, nyt]) {\n    objEach(nyt, (el, key) => {\n        if (jhu[key] === undefined) {\n            jhu[key] = el;\n        }\n    });\n    return jhu;\n}\nexport function toITimeSeries(dict) {\n    const dictionary = {};\n    const timeSeries = objReduce(dict, (arr, location, key) => {\n        if (location.locale) {\n            return arr;\n        }\n        const ts = TimeSeries.create(location);\n        arr.push(ts);\n        dictionary[key] = ts;\n        return arr;\n    }, TimeSeriesArray.create());\n    return { dictionary, timeSeries };\n}\nexport function convertToCountryDictionary(strings) {\n    return (dataSets) => {\n        const dict = {};\n        const createOnEach = (prop) => c => {\n            const countryCode = countriesToCodes[c.country];\n            if (!countryCode) {\n                log(strings.data.log.countryNotFound, c.country);\n                return;\n            }\n            let code = countryCode;\n            let stateCode = '';\n            if (c.state) {\n                const states = statesToCodes[c.country];\n                if (!states) {\n                    // don't bother logging these\n                    return;\n                }\n                stateCode = states[c.state];\n                if (!stateCode) {\n                    log(strings.data.log.stateNotFound, c.country + ',', c.state);\n                    return;\n                }\n                code = code + '.' + stateCode;\n            }\n            if (c.locale) {\n                code = code + '.' + c.locale;\n            }\n            if (dict[code]) {\n                c.timeSeries.map((value, i) => {\n                    if (dict[code].counts[i] === undefined) {\n                        log(strings.data.log.unexpectedLength, prop);\n                        dict[code].counts[i] = createTimeSeriesCount();\n                    }\n                    dict[code].counts[i][prop] = value;\n                });\n            }\n            else {\n                dict[code] = {\n                    country: c.country,\n                    countryCode,\n                    counts: c.timeSeries.map(value => {\n                        const tsc = createTimeSeriesCount();\n                        tsc[prop] = value;\n                        return tsc;\n                    }),\n                    dates: dataSets[0][0],\n                    key: code,\n                    locale: c.locale,\n                    population: c.population,\n                    populationDensity: c.populationDensity,\n                    state: c.state,\n                    stateCode,\n                };\n            }\n        };\n        dataSets[0][1].forEach(createOnEach('confirmed'));\n        dataSets[1][1].forEach(createOnEach('deaths'));\n        dataSets[2][1].forEach(createOnEach('recoveries'));\n        return dict;\n    };\n}\nexport function getRecoveryDays(strings) {\n    return (count, i, arr, rdays) => {\n        if (count.confirmed) {\n            if (count.recoveries < 1) {\n                if (arr[i - rdays]) {\n                    if (arr[i - rdays - 1]) {\n                        const rprev = arr[i - rdays - 1].confirmed;\n                        const rcurr = arr[i - rdays].confirmed;\n                        const diff = rcurr - rprev;\n                        if (arr[i - 1]) {\n                            return diff + arr[i - 1].recoveries;\n                        }\n                        else {\n                            return diff;\n                        }\n                    }\n                }\n            }\n            else {\n                return count.recoveries;\n            }\n        }\n        else {\n            if (count.deaths) {\n                log(strings.data.log.deathNoConfirmed);\n            }\n            if (count.recoveries) {\n                log(strings.data.log.recoveryNoConfirmed);\n            }\n        }\n        return 0;\n    };\n}\nexport function interpolateRecoveriesActiveCasesAndNewProps(strings) {\n    return (dict) => {\n        objEach(dict, c => {\n            c.counts.forEach((count, i, arr) => {\n                count.recoveries = getRecoveryDays(strings)(count, i, arr, recoveryDays);\n                count.active = count.confirmed - count.deaths - count.recoveries;\n                count.projectionReverseDeath = reverseDeathProjection(count);\n                count.newConfirmed =\n                    count.confirmed - (arr[i - 1] ? arr[i - 1].confirmed || 0 : 0);\n                count.newDeaths =\n                    count.deaths - (arr[i - 1] ? arr[i - 1].deaths || 0 : 0);\n            });\n        });\n        return dict;\n    };\n}\nexport function reverseDeathProjection(day) {\n    // projection is based on https://medium.com/@tomaspueyo/coronavirus-act-today-or-people-will-die-f4d3d9cd99ca\n    // https://docs.google.com/spreadsheets/d/1R25ygRLahhSNP2N-lnas_9a9aRWGCtAt3_sCYDoRyAU/edit#gid=0\n    const deaths = day.deaths;\n    const numberOfCasesCausingDeath = deaths / reverseDeathProjectionDefaults.fatalityRate;\n    const numberOfDoubles = reverseDeathProjectionDefaults.daysFromInfectionToDeath /\n        reverseDeathProjectionDefaults.doublingTime;\n    return numberOfCasesCausingDeath * Math.pow(2, numberOfDoubles);\n}\nexport function addCounts(a, b) {\n    return {\n        active: a.active + b.active,\n        confirmed: a.confirmed + b.confirmed,\n        deaths: a.deaths + b.deaths,\n        newConfirmed: a.newConfirmed + b.newConfirmed,\n        newDeaths: a.newDeaths + b.newDeaths,\n        recoveries: a.recoveries + b.recoveries,\n        projectionReverseDeath: a.projectionReverseDeath + b.projectionReverseDeath,\n    };\n}\nexport function sumWorld(strings) {\n    return (dict) => {\n        const world = {\n            country: strings.countries.world,\n            countryCode: strings.countries.world,\n            dates: Object.keys(generateDateDictionary()).map(ds => new Date(ds)),\n            key: strings.countries.world,\n            locale: '',\n            population: 0,\n            populationDensity: 0,\n            state: '',\n            stateCode: '',\n            counts: [],\n        };\n        objEach(dict, location => {\n            if (location.locale) {\n                return;\n            }\n            if (location.state && location.state !== strings.countries.total) {\n                return;\n            }\n            world.population += location.population;\n            location.counts.forEach((count, i) => {\n                if (world.counts[i]) {\n                    world.counts[i] = addCounts(world.counts[i], count);\n                }\n                else {\n                    world.counts[i] = Object.assign({}, count);\n                }\n            });\n        });\n        dict[strings.countries.world] = world;\n        return dict;\n    };\n}\nexport function sumAllRegions(strings) {\n    return (dict) => {\n        objEach(dict, location => {\n            if (location.state === strings.countries.total) {\n                // skip totals\n                return;\n            }\n            if (location.state) {\n                if (location.locale) {\n                    // re-implement US addition?\n                    return;\n                }\n                if (dict[location.countryCode]) {\n                    // skip if there's already a total like in UK's case\n                    return;\n                }\n                const totalKey = location.countryCode + '.' + strings.countries.total;\n                if (dict[totalKey] === undefined) {\n                    dict[totalKey] = Object.assign(Object.assign({}, location), { key: totalKey, locale: '', population: getPopulation(strings)(location.country), populationDensity: getPopulationDensity(location.country), state: strings.countries.total, counts: [] });\n                }\n                location.counts.forEach((count, i) => {\n                    if (dict[totalKey].counts[i]) {\n                        dict[totalKey].counts[i] = addCounts(dict[totalKey].counts[i], count);\n                    }\n                    else {\n                        dict[totalKey].counts[i] = count;\n                    }\n                });\n            }\n        });\n        return dict;\n    };\n}\nfunction getPopulation(strings) {\n    return (country, state, locale) => {\n        if (locale) {\n            return 0;\n        }\n        if (state) {\n            return getStatePopulation(country, state, locale);\n        }\n        let population = populationDictionary[country];\n        if (population) {\n            return population;\n        }\n        population = populationDictionary[mapJhuCountryToPop[country]];\n        if (population) {\n            return population;\n        }\n        population = manuallySourcePop[country];\n        if (population) {\n            return population;\n        }\n        log(strings.data.log.populationNotFound, country, state, locale);\n        return 0;\n    };\n}\nfunction getStatePopulation(country, state, locale) {\n    if (locale) {\n        return 0;\n    }\n    if (manuallySourceStatePop[country]) {\n        if (country === usaCode) {\n            const rawStateCode = usStateCodeByName[state];\n            if (rawStateCode) {\n                const stateCode = rawStateCode === 'D.C.' ? 'DC' : rawStateCode;\n                if (manuallySourceStatePop[country][stateCode]) {\n                    return manuallySourceStatePop[country][stateCode];\n                }\n            }\n        }\n        else {\n            if (manuallySourceStatePop[country][state]) {\n                return manuallySourceStatePop[country][state];\n            }\n        }\n    }\n    return 0;\n}\nfunction getPopulationDensity(country, state, locale) {\n    if (state || locale) {\n        return 0;\n    }\n    let populationDensity = populationDensityDictionary[country];\n    if (populationDensity) {\n        return populationDensity;\n    }\n    populationDensity = populationDensityDictionary[mapJhuCountryToPop[country]];\n    if (populationDensity) {\n        return populationDensity;\n    }\n    return 0;\n}\nfunction unwrapResponse(response) {\n    return response.text();\n}\nfunction unwrapResponses(responses) {\n    return Promise.all(responses.map(unwrapResponse));\n}\nexport function csvRowStringToArray(csvRow) {\n    const chars = csvRow.split('');\n    const state = {\n        buffer: '',\n        isEscape: false,\n        isInQuote: false,\n    };\n    const toggleQuoteState = () => {\n        if (state.isInQuote) {\n            state.isInQuote = false;\n        }\n        else {\n            state.isInQuote = true;\n        }\n    };\n    const toggleEscape = () => {\n        if (state.isEscape) {\n            state.isEscape = false;\n        }\n        else {\n            state.isEscape = true;\n        }\n    };\n    return chars.reduce((arr, el, i, c) => {\n        if (el === '\"') {\n            if (state.isEscape) {\n                state.buffer += el;\n                toggleEscape();\n            }\n            else {\n                toggleQuoteState();\n            }\n            return arr;\n        }\n        if (el === '\\\\') {\n            if (state.isEscape) {\n                state.buffer += el;\n                toggleEscape();\n            }\n            else {\n                toggleEscape();\n            }\n            return arr;\n        }\n        if (el === ',') {\n            if (state.isInQuote) {\n                state.buffer += el;\n            }\n            else {\n                arr.push(state.buffer);\n                state.buffer = '';\n            }\n            return arr;\n        }\n        state.buffer += el;\n        if (i === c.length - 1) {\n            arr.push(state.buffer);\n            state.buffer = '';\n        }\n        return arr;\n    }, []);\n}\nexport function stateToLocaleState(string) {\n    if (string.indexOf(',') > -1) {\n        const split = string.split(',').filter(Boolean);\n        return [split[0].trim(), split[1].trim()];\n    }\n    else {\n        return ['', string];\n    }\n}\nexport function csvRowStringToJhuTimeSeriesHeader(rowString) {\n    const cells = rowString.split(',');\n    return cells.slice(4).map(item => new Date(item));\n}\nexport function convertRowToTimeSeries(strings) {\n    return (row) => {\n        const country = row[1];\n        const [locale, state] = stateToLocaleState(row[0]);\n        const population = getPopulation(strings)(country, state, locale);\n        const populationDensity = getPopulationDensity(country, state, locale);\n        return {\n            country,\n            locale,\n            population,\n            populationDensity,\n            state,\n            timeSeries: row.slice(4).map(item => parseInt(item, 10)),\n        };\n    };\n}\nexport function convertStringArrayToStructured(strings) {\n    return (rowString) => {\n        const rows = rowString.split('\\n');\n        const header = csvRowStringToJhuTimeSeriesHeader(rows[0]);\n        return [\n            header,\n            rows\n                .slice(1)\n                .map(csvRowStringToArray)\n                .filter(row => row.length)\n                .map(convertRowToTimeSeries(strings)),\n        ];\n    };\n}\nfunction convertAllJhuCsvToStructured(strings) {\n    return (csvStrings) => {\n        return csvStrings.map(convertStringArrayToStructured(strings));\n    };\n}\nfunction sortNytRows(rows) {\n    rows.sort((a, b) => {\n        if (a[0] < b[0]) {\n            return -1;\n        }\n        if (a[0] > b[0]) {\n            return 1;\n        }\n        return 0;\n    });\n    return rows;\n}\nfunction simplePad(number) {\n    if (number < 10) {\n        return '0' + number;\n    }\n    return number + '';\n}\nexport function generateDateDictionary() {\n    const day0 = new Date(jhuStartDay).getTime();\n    const now = Date.now() - twentyFourSeven;\n    const days = Math.floor((now - day0) / 1000 / 60 / 60 / 24);\n    const dict = {};\n    for (let i = 0; i < days; i += 1) {\n        const today = new Date(day0 + i * twentyFourSeven);\n        const year = today.getUTCFullYear();\n        const month = simplePad(today.getUTCMonth() + 1);\n        const date = simplePad(today.getUTCDate());\n        const todayString = `${year}-${month}-${date}`;\n        dict[todayString] = i;\n    }\n    return dict;\n}\nexport function nytRowsToDict(rows) {\n    const dict = {};\n    rows.forEach(row => {\n        if (!row[0] || !row[1]) {\n            return;\n        }\n        const stateCode = usStateCodeByName[row[1]];\n        if (!stateCode) {\n            return;\n        }\n        const key = keyFromUsState(stateCode);\n        if (dict[row[0]] === undefined) {\n            dict[row[0]] = {};\n        }\n        if (dict[row[0]][key] === undefined) {\n            dict[row[0]][key] = createTimeSeriesCount();\n        }\n        if (row[3]) {\n            dict[row[0]][key].confirmed = parseInt(row[3], 10);\n        }\n        if (row[4]) {\n            dict[row[0]][key].deaths = parseInt(row[4], 10);\n        }\n    });\n    return dict;\n}\nfunction convertNytTimeSeriesDictToStateDict(byTime) {\n    const byState = {};\n    // account for JHU D.C. code\n    const states = Object.keys(statesToCodes.US).filter(code => {\n        if (code === 'D.C.') {\n            return false;\n        }\n        return true;\n    });\n    const dateDict = generateDateDictionary();\n    const dates = [];\n    objEach(dateDict, (timeSeriesIndex, dateString) => {\n        dates.push(new Date(dateString));\n        states.forEach(stateCode => {\n            const key = keyFromUsState(stateCode);\n            if (byState[key] === undefined) {\n                byState[key] = [];\n            }\n            if (byTime[dateString] && byTime[dateString][key]) {\n                byState[key][timeSeriesIndex] = byTime[dateString][key];\n            }\n            else {\n                const last = byState[key][timeSeriesIndex - 1];\n                if (last) {\n                    byState[key][timeSeriesIndex] = Object.assign({}, last);\n                }\n                else {\n                    byState[key][timeSeriesIndex] = createTimeSeriesCount();\n                }\n            }\n        });\n    });\n    return [dates, byState];\n}\nfunction convertNytCsvToStructured(string) {\n    const rows = sortNytRows(string\n        .split('\\n')\n        .slice(1)\n        .map(csvRowStringToArray));\n    const timeSeriesDict = nytRowsToDict(rows);\n    const [dates, byState] = convertNytTimeSeriesDictToStateDict(timeSeriesDict);\n    const dict = {};\n    objEach(byState, (counts, key) => {\n        const stateCode = key.split('.')[1];\n        const state = statesToCodes.US[stateCode];\n        dict[key] = {\n            country: usaCode,\n            countryCode: usaCode,\n            dates,\n            key,\n            locale: '',\n            population: getStatePopulation(usaCode, state),\n            populationDensity: getPopulationDensity(usaCode, state),\n            state,\n            stateCode,\n            counts,\n        };\n    });\n    return dict;\n}\nfunction extractCountries({ dictionary, timeSeries, }) {\n    const countries = objReduce(dictionary, (arr, location, key) => {\n        if (location.locale()) {\n            return arr;\n        }\n        const name = location.countryName();\n        arr.push({ index: key, name });\n        return arr;\n    }, []).sort(sortByProp('name'));\n    return { countries, dictionary, timeSeries };\n}\nfunction sortByProp(prop) {\n    return (a, b) => {\n        if (a[prop] < b[prop]) {\n            return -1;\n        }\n        if (a[prop] > b[prop]) {\n            return 1;\n        }\n        return 0;\n    };\n}\n/** @todo i18n string data */\nfunction getChartTypeFromIndex(index) {\n    switch (index) {\n        case 0:\n            return '😷 (Active)';\n        case 1:\n            return '✔ (Confirmed)';\n        case 2:\n            return '☠ (Deaths)';\n        case 3:\n            return '😊 (Recoveries)';\n        case 4:\n            return '😷 (New Active)';\n        case 5:\n            return '☠ (New Deaths)';\n        case 6:\n            return '🤔 (Estimate)';\n        case 7:\n            return '😷 (SEIR Active)';\n        case 8:\n            return '☠ (SEIR Deaths)';\n        case 9:\n            return '😊 (SEIR Recoveries)';\n        default:\n            return '😊 (Recovery)';\n    }\n}\nfunction getTimeVsCountsSeries(cache, state, timeSeries) {\n    let selectedIndex = 0;\n    return timeSeries.reduce((cs, ts) => {\n        if (state.countryKeys.indexOf(ts.key()) > -1) {\n            return selectTimeVsCountsDataByMode(cache, state, cs, ts, selectedIndex++);\n        }\n        return cs;\n    }, []);\n}\nfunction getConfirmedVsRecentSeries(cache, state, timeSeries) {\n    let selectedIndex = 0;\n    return timeSeries.reduce((cs, ts) => {\n        if (state.countryKeys.indexOf(ts.key()) > -1) {\n            return selectConfirmedVsRecentData(cache, state, cs, ts, selectedIndex++);\n        }\n        return cs;\n    }, []);\n}\nexport function selectData(cache, state) {\n    return state.dataPromise.then(({ countries, timeSeries }) => {\n        let series;\n        if (state.routePath === '/') {\n            series = getTimeVsCountsSeries(cache, state, timeSeries);\n        }\n        else {\n            series = getConfirmedVsRecentSeries(cache, state, timeSeries);\n        }\n        return {\n            countries,\n            series,\n        };\n    });\n}\nfunction selectConfirmedVsRecentData(cache, state, cs, ts, index) {\n    const recent = 7;\n    const colour = basePalette[index % basePalette.length];\n    const chart = {\n        color: colour,\n        line: { color: colour },\n        name: ts.countryName(),\n        points: [],\n    };\n    const yMin = 1;\n    const xMin = 100;\n    for (let i = ts.counts().length - 1; i > recent; i -= 1) {\n        const count = ts.counts()[i];\n        const recentDaysAgo = ts.counts()[i - recent] || createTimeSeriesCount();\n        const y = count.confirmed - recentDaysAgo.confirmed || yMin;\n        if (count.confirmed < xMin) {\n            continue;\n        }\n        chart.points.push({\n            x: count.confirmed,\n            y,\n        });\n    }\n    chart.points = chart.points.reverse();\n    cs.push(chart);\n    return cs;\n}\nfunction selectTimeVsCountsDataByMode(cache, state, cs, ts, index) {\n    switch (state.timeVsCountsState.mode) {\n        case 1:\n            return selectTimeVsCountsDataByConfirmed(cache, state, cs, ts, index, 1);\n        case 2:\n            return selectTimeVsCountsDataByConfirmed(cache, state, cs, ts, index, 100);\n        default:\n            return selectTimeVsCountsDataByDate(cache, state, cs, ts, index);\n    }\n}\nfunction createSelectTimeVsCountsChart(dataSetIndex, index, ts) {\n    const field = getFieldFromIndex(dataSetIndex);\n    const colour = dataSetIndex > 5\n        ? projectionPalette[index % projectionPalette.length]\n        : basePalette[index % basePalette.length];\n    const line = { color: colour };\n    const type = dataSetIndex === 4 || dataSetIndex === 5 ? 'column' : undefined;\n    const chart = {\n        color: colour,\n        line,\n        name: getChartTypeFromIndex(dataSetIndex) + ' ' + ts.countryName(),\n        points: [],\n        type,\n    };\n    return { chart, field };\n}\nexport function createToolTip(ts, dataSetIndex, day, fromDay0 = -1) {\n    const fp = (num) => (num < 0.01 ? num.toFixed(6) : num.toFixed(2)).toLocaleString();\n    const header = (fromDay0 < 0\n        ? `<b>${ts.formatName()}</b> ` + ts.dates()[day].toLocaleDateString()\n        : `<b>${ts.formatName()} Day ` +\n            fromDay0 +\n            '</b> (' +\n            ts.dates()[day].toLocaleDateString() +\n            ')') +\n        '<br/> Population ' +\n        ts.population().toLocaleString() +\n        (ts.populationDensity() ? ` (${ts.populationDensity()}/km2)` : '');\n    return (header +\n        '<br/><br/>' +\n        [\n            {\n                index: 0,\n                label: `Active ${ts.counts()[day].active.toLocaleString()} (${fp((ts.counts()[day].active / ts.population()) * 100)} %)`,\n            },\n            {\n                index: 1,\n                label: `Confirmed ${ts.counts()[day].confirmed.toLocaleString()} (${fp((ts.counts()[day].confirmed / ts.population()) * 100)} %)`,\n            },\n            {\n                index: 2,\n                label: `Deaths ${ts.counts()[day].deaths.toLocaleString()} (${fp((ts.counts()[day].deaths / ts.population()) * 100)} %)`,\n            },\n            {\n                index: 3,\n                label: `Recoveries ${ts\n                    .counts()[day].recoveries.toLocaleString()} (${fp((ts.counts()[day].recoveries / ts.population()) * 100)} %)`,\n            },\n        ]\n            .sort((a, b) => {\n            if (a.index === dataSetIndex) {\n                return -1;\n            }\n            if (b.index === dataSetIndex) {\n                return 1;\n            }\n            if (a.label < b.label) {\n                return -1;\n            }\n            if (a.label > b.label) {\n                return 1;\n            }\n            return 0;\n        })\n            .map(({ label }, i) => (i === 0 ? `<b>${label}</b>` : label))\n            .join('<br/>') +\n        '<br/><br/>' +\n        [\n            `New Cases: <b>${ts.counts()[day].newConfirmed.toLocaleString()}</b>`,\n            `New Deaths: <b>${ts.counts()[day].newDeaths.toLocaleString()}</b>`,\n        ].join('<br/>'));\n}\nfunction createSelectTimeVsCountsByConfirmedReducer(ts, state, field, startDate, count, dataSetIndex) {\n    let fromDay0 = 0;\n    return (ps, c, i) => {\n        if (ts.dates()[i] && ts.dates()[i] > startDate && c.confirmed >= count) {\n            const y = getY(state.timeVsCountsState.byMetric, c[field], ts.population());\n            if (y) {\n                ps.push({\n                    tooltip: createToolTip(ts, dataSetIndex, i, fromDay0),\n                    x: fromDay0,\n                    y,\n                });\n            }\n            fromDay0 += 1;\n        }\n        return ps;\n    };\n}\nfunction projectPoints(projections, dataSetIndex, chart) {\n    if (dataSetIndex === 7) {\n        chart.points = projections.active;\n        return true;\n    }\n    if (dataSetIndex === 8) {\n        chart.points = projections.deaths;\n        return true;\n    }\n    if (dataSetIndex === 9) {\n        chart.points = projections.recoveries;\n        return true;\n    }\n    return false;\n}\nfunction selectTimeVsCountsDataByConfirmed(cache, state, cs, ts, index, count) {\n    const startDate = new Date(state.timeVsCountsState.startDate);\n    const projectionsSeir = createSeirPoints(ts, ts.counts().reduce((index, el, i, arr) => {\n        if (index !== -1) {\n            return index;\n        }\n        if (el.confirmed >= count) {\n            return arr.length - i - 1;\n        }\n        return index;\n    }, -1), state.timeVsCountsState.byMetric);\n    state.timeVsCountsState.dataSetIndexes.forEach(dataSetIndex => {\n        const { chart, field } = createSelectTimeVsCountsChart(dataSetIndex, index, ts);\n        if (projectPoints(projectionsSeir, dataSetIndex, chart)) {\n            cs.push(chart);\n            return;\n        }\n        chart.points = ts\n            .counts()\n            .reduce(createSelectTimeVsCountsByConfirmedReducer(ts, state, field, startDate, count, dataSetIndex), []);\n        cs.push(chart);\n    });\n    return cs;\n}\nfunction getFieldFromIndex(index) {\n    switch (index) {\n        case 0:\n            return 'active';\n        case 1:\n            return 'confirmed';\n        case 2:\n            return 'deaths';\n        case 3:\n            return 'recoveries';\n        case 4:\n            return 'newConfirmed';\n        case 5:\n            return 'newDeaths';\n        case 6:\n            return 'projectionReverseDeath';\n        default:\n            return 'recoveries';\n    }\n}\nfunction createSelectTimeVsCountsByDateReducer(ts, state, field, startDate, dataSetIndex) {\n    return (ps, c, i) => {\n        if (ts.dates()[i] && ts.dates()[i] > startDate) {\n            const y = getY(state.timeVsCountsState.byMetric, c[field], ts.population());\n            if (y) {\n                ps.push({\n                    tooltip: createToolTip(ts, dataSetIndex, i),\n                    x: ts.dates()[i],\n                    y,\n                });\n            }\n        }\n        return ps;\n    };\n}\nfunction getIntervention(code) {\n    switch (code) {\n        case 'CN':\n            return 0;\n        case 'KR':\n            return 0;\n        default:\n            return 10;\n    }\n}\nfunction createSeirPoints(ts, byConfirmedStart, byMetric) {\n    const intervention = getIntervention(ts.countryCode());\n    const seir = Seir.create(ts.population(), ts.lastConfirmed(), intervention);\n    const dates = ts.dates();\n    const start = dates[dates.length - 1]\n        ? dates[dates.length - 1].getTime()\n        : new Date(jhuStartDay).getTime();\n    const solution = seir.getSolution();\n    const max = solution.P.length < 35 ? solution.P.length : 35;\n    const active = [];\n    const deaths = [];\n    const recoveries = [];\n    for (let i = 1; i < max; i += 1) {\n        const x = byConfirmedStart === -1\n            ? new Date(start + (i - 1) * twentyFourSeven)\n            : byConfirmedStart + i - 1;\n        active.push({\n            x,\n            y: byMetric === 0\n                ? solution.P[i][4]\n                : (solution.P[i][4] / ts.population()) * 100,\n        });\n        deaths.push({\n            x,\n            y: byMetric === 0\n                ? solution.P[i][0]\n                : (solution.P[i][0] / ts.population()) * 100,\n        });\n        recoveries.push({\n            x,\n            y: byMetric === 0\n                ? solution.P[i][2]\n                : (solution.P[i][2] / ts.population()) * 100,\n        });\n    }\n    return { active, deaths, recoveries };\n}\nfunction selectTimeVsCountsDataByDate(cache, state, cs, ts, index) {\n    const startDate = new Date(state.timeVsCountsState.startDate);\n    const projectionsSeir = createSeirPoints(ts, -1, state.timeVsCountsState.byMetric);\n    state.timeVsCountsState.dataSetIndexes.forEach(dataSetIndex => {\n        const { chart, field } = createSelectTimeVsCountsChart(dataSetIndex, index, ts);\n        if (projectPoints(projectionsSeir, dataSetIndex, chart)) {\n            cs.push(chart);\n            return;\n        }\n        chart.points = ts\n            .counts()\n            .reduce(createSelectTimeVsCountsByDateReducer(ts, state, field, startDate, dataSetIndex), []);\n        cs.push(chart);\n    });\n    return cs;\n}\nfunction getY(byMetric, value, population) {\n    if (byMetric === 0) {\n        return value;\n    }\n    else {\n        if (population) {\n            return (value / population) * 100;\n        }\n        else {\n            return 0;\n        }\n    }\n}\nfunction keyFromUsState(code) {\n    return usaCode + '.' + code;\n}\n","import { fetchData } from './data';\nimport { isNumber, isString, isBoolean } from '@ch1/utility';\nimport { log } from './utility';\nimport { TimeSeriesArray } from './time-series';\nimport { jhuStartDay } from './constants';\nconst defaultDataset = 0;\nconst defaultCountries = [];\nconst defaultMode = 2;\nconst defaultStart = jhuStartDay;\nconst defaultScaleType = 0;\nconst defaultShowStates = false;\nexport function createState(strings) {\n    return {\n        countries: [],\n        currentSeries: [],\n        data: TimeSeriesArray.create(),\n        dataPromise: fetchData(strings),\n        countryKeys: defaultCountries,\n        routePath: '/',\n        timeVsCountsState: {\n            dataSetIndexes: [defaultDataset],\n            byMetric: 0,\n            countryFilter: '',\n            isConfigOpen: false,\n            mode: defaultMode,\n            scaleType: defaultScaleType,\n            showStates: defaultShowStates,\n            startDate: defaultStart,\n        },\n        tableState: {\n            columns: [1, 3, 5, 7, 9],\n            isConfigOpen: false,\n            showAll: true,\n            sortByActive: false,\n            sortByActivePercent: false,\n            sortByConfirmed: false,\n            sortByConfirmedPercent: false,\n            sortByDeaths: false,\n            sortByDeathsPercent: false,\n            sortByNewConfirmed: false,\n            sortByNewDeaths: false,\n            sortByRecoveries: false,\n            sortByRecoveriesPercent: false,\n            sortByPeakActive: false,\n            sortByPeakActivePercent: false,\n            sortByPeakConfirmed: false,\n            sortByPeakConfirmedPercent: false,\n            sortByPeakDeaths: false,\n            sortByPeakDeathsPercent: false,\n            sortByPeakNewConfirmed: false,\n            sortByPeakNewDeaths: false,\n            sortByPeakRecoveries: false,\n            sortByPeakRecoveriesPercent: false,\n            sortByPopulation: false,\n            sortByPopulationDensity: false,\n        },\n        confirmedVsRecentState: {\n            countryFilter: '',\n            isConfigOpen: false,\n            showStates: defaultShowStates,\n        },\n    };\n}\nexport function saveState(state) {\n    if (window.localStorage) {\n        window.localStorage.setItem('state', JSON.stringify(Object.assign(Object.assign({}, state), { currentSeries: undefined, data: undefined, dataPromise: undefined })));\n    }\n}\nexport function loadState(strings) {\n    if (window.localStorage) {\n        const item = window.localStorage.getItem('state');\n        if (item) {\n            try {\n                const parsed = JSON.parse(item);\n                if (!parsed) {\n                    return null;\n                }\n                if (isSavedAppState(parsed) === false) {\n                    log(strings.state.wipingOld);\n                    window.localStorage.setItem('state', '');\n                    return null;\n                }\n                return Object.assign(Object.assign({}, parsed), { currentSeries: [], dataPromise: fetchData(strings), data: TimeSeriesArray.create() });\n            }\n            catch (e) {\n                log(strings.state.parseFail);\n                window.localStorage.setItem('state', '');\n                return null;\n            }\n        }\n    }\n    return null;\n}\nconst dataTypeAppState = [\n    { prop: 'countries', is: Array.isArray },\n    { prop: 'timeVsCountsState', is: isSavedTimeVsCountsState },\n    { prop: 'countryKeys', is: Array.isArray },\n    { prop: 'tableState', is: isSavedTableState },\n    { prop: 'confirmedVsRecentState', is: isConfirmedVsRecentState },\n];\nconst dataTypeSavedTimeVsCountsState = [\n    { prop: 'isConfigOpen', is: isBoolean },\n    { prop: 'byMetric', is: isNumber },\n    { prop: 'countryFilter', is: isString },\n    { prop: 'dataSetIndexes', is: Array.isArray },\n    { prop: 'mode', is: isNumber },\n    { prop: 'showStates', is: isBoolean },\n    { prop: 'startDate', is: isString },\n];\nfunction isDataType(dt, thing) {\n    if (!thing) {\n        return false;\n    }\n    return dt.reduce((r, pi) => {\n        if (r === false) {\n            return r;\n        }\n        return pi.is(thing[pi.prop]);\n    }, true);\n}\nconst dataTypeSavedTableState = [\n    { prop: 'columns', is: Array.isArray },\n    { prop: 'isConfigOpen', is: isBoolean },\n    { prop: 'showAll', is: isBoolean },\n    { prop: 'sortByActive', is: isBoolean },\n    { prop: 'sortByActivePercent', is: isBoolean },\n    { prop: 'sortByConfirmed', is: isBoolean },\n    { prop: 'sortByConfirmedPercent', is: isBoolean },\n    { prop: 'sortByDeaths', is: isBoolean },\n    { prop: 'sortByDeathsPercent', is: isBoolean },\n    { prop: 'sortByRecoveries', is: isBoolean },\n    { prop: 'sortByRecoveriesPercent', is: isBoolean },\n    { prop: 'sortByPeakActive', is: isBoolean },\n    { prop: 'sortByPeakActivePercent', is: isBoolean },\n    { prop: 'sortByPeakConfirmed', is: isBoolean },\n    { prop: 'sortByPeakConfirmedPercent', is: isBoolean },\n    { prop: 'sortByPeakDeaths', is: isBoolean },\n    { prop: 'sortByPeakDeathsPercent', is: isBoolean },\n    { prop: 'sortByPeakRecoveries', is: isBoolean },\n    { prop: 'sortByPeakRecoveriesPercent', is: isBoolean },\n    { prop: 'sortByPopulation', is: isBoolean },\n    { prop: 'sortByPopulationDensity', is: isBoolean },\n];\nfunction isSavedAppState(thing) {\n    return isDataType(dataTypeAppState, thing);\n}\nfunction isSavedTimeVsCountsState(thing) {\n    return isDataType(dataTypeSavedTimeVsCountsState, thing);\n}\nfunction isSavedTableState(thing) {\n    return isDataType(dataTypeSavedTableState, thing);\n}\nexport function getSavedLanguage() {\n    if (window.localStorage) {\n        return window.localStorage.getItem('language') || '';\n    }\n}\nexport function saveLanguage(language) {\n    if (window.localStorage) {\n        window.localStorage.setItem('language', language);\n    }\n}\nfunction isConfirmedVsRecentState(thing) {\n    if (!thing) {\n        return false;\n    }\n    if (isString(thing.countryFilter) === false) {\n        return false;\n    }\n    if (isBoolean(thing.isConfigOpen) === false) {\n        return false;\n    }\n    if (isBoolean(thing.showStates) === false) {\n        return false;\n    }\n    return true;\n}\n","import { Component, h } from 'preact';\nimport { rowEven, rowOdd, rowHighlight, fullSize, flexCol, flexItem95, flex, flexItem60, } from '../constants';\nimport { ButtonToggle } from '../components/button-toggle';\nimport { SelectMultiple } from '../components/select-multiple';\nimport { noop } from '@ch1/utility';\nimport { Select } from '../components/select';\nimport { Menu } from '../components/menu';\nexport class LearningTable extends Component {\n    constructor() {\n        super();\n        this.state = {};\n    }\n    formatNumber(value) {\n        return value.toLocaleString();\n    }\n    formatDecimal(value, decimals = 2) {\n        return value.toFixed(decimals);\n    }\n    formatPercent(value, decimals = 2) {\n        return this.formatDecimal(value, decimals) + '%';\n    }\n    clickHeader(t) {\n        this.props.timeSeries[t.sort](this.props.state[t.sort]);\n        this.props.onChange(Object.assign(Object.assign({}, this.props.state), { [t.sort]: this.props.state[t.sort] ? false : true }));\n    }\n    toggleConfig(v) {\n        this.props.onChange(Object.assign(Object.assign({}, this.props.state), { isConfigOpen: v }));\n    }\n    toggleShowAll() {\n        this.props.onChange(Object.assign(Object.assign({}, this.props.state), { showAll: this.props.state.showAll ? false : true }));\n    }\n    onChangeColumns(column) {\n        if (this.props.state.columns.indexOf(column) === -1) {\n            if (this.props.state.columns.length < 6) {\n                this.props.onChange(Object.assign(Object.assign({}, this.props.state), { columns: this.props.state.columns.concat([column]) }));\n            }\n            else {\n                this.props.onChange(Object.assign(Object.assign({}, this.props.state), { columns: this.props.state.columns.slice(0) }));\n            }\n        }\n        else {\n            this.props.onChange(Object.assign(Object.assign({}, this.props.state), { columns: this.props.state.columns.filter(i => i !== column) }));\n        }\n    }\n    render() {\n        const header = [\n            {\n                label: this.props.strings.learningTable.titles.region,\n                sort: 'sortByCountry',\n                value: (ts) => ts.formatName(),\n            },\n        ].concat([\n            {\n                label: this.props.strings.learningTable.titles.active,\n                sort: 'sortByActive',\n                value: (ts) => ts.lastActive().toLocaleString(),\n            },\n            {\n                label: this.props.strings.learningTable.titles.activePercent,\n                sort: 'sortByActivePercent',\n                value: (ts) => ts\n                    .lastActivePercent()\n                    .toFixed(3)\n                    .toLocaleString() + '%',\n            },\n            {\n                label: this.props.strings.learningTable.titles.confirmed,\n                sort: 'sortByConfirmed',\n                value: (ts) => ts.lastConfirmed().toLocaleString(),\n            },\n            {\n                label: this.props.strings.learningTable.titles.confirmedPercent,\n                sort: 'sortByConfirmedPercent',\n                value: (ts) => ts\n                    .lastConfirmedPercent()\n                    .toFixed(3)\n                    .toLocaleString() + '%',\n            },\n            {\n                label: this.props.strings.learningTable.titles.deaths,\n                sort: 'sortByDeaths',\n                value: (ts) => ts.lastDeaths().toLocaleString(),\n            },\n            {\n                label: this.props.strings.learningTable.titles.deathsPercent,\n                sort: 'sortByDeathsPercent',\n                value: (ts) => ts\n                    .lastDeathsPercent()\n                    .toFixed(6)\n                    .toLocaleString() + '%',\n            },\n            {\n                label: this.props.strings.learningTable.titles.recoveries,\n                sort: 'sortByRecoveries',\n                value: (ts) => ts.lastRecoveries().toLocaleString(),\n            },\n            {\n                label: this.props.strings.learningTable.titles.recoveriesPercent,\n                sort: 'sortByRecoveriesPercent',\n                value: (ts) => ts\n                    .lastRecoveriesPercent()\n                    .toFixed(3)\n                    .toLocaleString() + '%',\n            },\n            {\n                label: this.props.strings.learningTable.titles.mortality,\n                sort: 'sortByMortality',\n                value: (ts) => ts.lastMortality().toLocaleString() + '%',\n            },\n            {\n                label: this.props.strings.learningTable.titles.newConfirmed,\n                sort: 'sortByNewConfirmed',\n                value: (ts) => ts.lastNewConfirmed().toLocaleString(),\n            },\n            {\n                label: this.props.strings.learningTable.titles.newDeaths,\n                sort: 'sortByNewDeaths',\n                value: (ts) => ts.lastNewDeaths().toLocaleString(),\n            },\n            {\n                label: this.props.strings.learningTable.titles.peakActive,\n                sort: 'sortByPeakActive',\n                value: (ts) => ts.peakActive().toLocaleString(),\n            },\n            {\n                label: this.props.strings.learningTable.titles.peakActivePercent,\n                sort: 'sortByPeakActivePercent',\n                value: (ts) => ts\n                    .peakActivePercent()\n                    .toFixed(3)\n                    .toLocaleString() + '%',\n            },\n            {\n                label: this.props.strings.learningTable.titles.peakConfirmed,\n                sort: 'sortByPeakConfirmed',\n                value: (ts) => ts.peakConfirmed().toLocaleString(),\n            },\n            {\n                label: this.props.strings.learningTable.titles.peakConfirmedPercent,\n                sort: 'sortByPeakConfirmedPercent',\n                value: (ts) => ts\n                    .peakConfirmedPercent()\n                    .toFixed(3)\n                    .toLocaleString() + '%',\n            },\n            {\n                label: this.props.strings.learningTable.titles.peakDeaths,\n                sort: 'sortByPeakDeaths',\n                value: (ts) => ts.peakDeaths().toLocaleString(),\n            },\n            {\n                label: this.props.strings.learningTable.titles.peakDeathsPercent,\n                sort: 'sortByPeakDeathsPercent',\n                value: (ts) => ts\n                    .peakDeathsPercent()\n                    .toFixed(6)\n                    .toLocaleString() + '%',\n            },\n            {\n                label: this.props.strings.learningTable.titles.peakRecoveries,\n                sort: 'sortByPeakRecoveries',\n                value: (ts) => ts.peakRecoveries().toLocaleString(),\n            },\n            {\n                label: this.props.strings.learningTable.titles.peakRecoveriesPercent,\n                sort: 'sortByPeakRecoveriesPercent',\n                value: (ts) => ts\n                    .peakDeathsPercent()\n                    .toFixed(3)\n                    .toLocaleString() + '%',\n            },\n            {\n                label: this.props.strings.learningTable.titles.peakMortality,\n                sort: 'sortByPeakMortality',\n                value: (ts) => ts.peakMortality().toLocaleString() + '%',\n            },\n            {\n                label: this.props.strings.learningTable.titles.peakNewConfirmed,\n                sort: 'sortByPeakNewConfirmed',\n                value: (ts) => ts.peakNewConfirmed().toLocaleString(),\n            },\n            {\n                label: this.props.strings.learningTable.titles.peakNewDeaths,\n                sort: 'sortByPeakNewDeaths',\n                value: (ts) => ts.peakNewDeaths().toLocaleString(),\n            },\n            {\n                label: this.props.strings.learningTable.titles.population,\n                sort: 'sortByPopulation',\n                value: (ts) => ts.population().toLocaleString(),\n            },\n            {\n                label: this.props.strings.learningTable.titles.populationDensity,\n                sort: 'sortByPopulationDensity',\n                value: (ts) => ts.populationDensity().toLocaleString(),\n            },\n        ].sort((a, b) => {\n            if (a.label < b.label) {\n                return -1;\n            }\n            if (a.label > b.label) {\n                return 1;\n            }\n            return 0;\n        }));\n        const tbody = window.document.body.clientHeight *\n            (this.props.state.isConfigOpen ? 0.6 : 0.82);\n        const width = `width: ${100 / (this.props.state.columns.length || 1)}%;`;\n        return (h(\"section\", { className: `${fullSize} ${flexCol}` },\n            h(\"section\", { className: this.props.state.isConfigOpen ? flexItem60 : flexItem95 },\n                h(\"table\", { style: `height: ${this.props.state.isConfigOpen ? 83 : 90}%; width: 100%;` },\n                    h(\"thead\", null,\n                        h(\"tr\", null, header.map((t, i) => i === 0 || this.props.state.columns.indexOf(i) > -1 ? (h(\"th\", { style: width, onClick: () => this.clickHeader(t) }, t.label)) : ('')))),\n                    h(\"tbody\", { style: `overflow: auto; max-height: ${tbody}px;` }, this.props.timeSeries.map((ts, tsIndex) => {\n                        if (ts.counts().length < 1) {\n                            return '';\n                        }\n                        if (this.props.state.showAll === false) {\n                            if (this.props.countryKeys.indexOf(ts.key()) === -1) {\n                                return '';\n                            }\n                        }\n                        const rowParity = tsIndex % 2 === 0 ? rowEven : rowOdd;\n                        const rowClass = this.props.countryKeys.indexOf(ts.key()) > -1\n                            ? rowHighlight + ' ' + rowParity\n                            : rowParity;\n                        return (h(\"tr\", { className: rowClass, onClick: () => this.props.selectCountry(ts.key()) }, header.map((t, i) => i === 0 || this.props.state.columns.indexOf(i) > -1 ? (h(\"td\", { style: width }, t.value(ts))) : (''))));\n                    })))),\n            h(\"section\", null,\n                h(\"section\", { className: flex },\n                    h(ButtonToggle, { labelTrue: this.props.strings.learningTable.enlarge, labelFalse: this.props.strings.learningTable.configure, onClick: this.toggleConfig.bind(this), state: this.props.state.isConfigOpen }),\n                    h(Menu, { config: this.props.menu })),\n                this.props.state.isConfigOpen ? (h(\"section\", { className: flex },\n                    h(SelectMultiple, { onChange: noop, onClick: v => this.onChangeColumns(parseInt(v + '', 10) + 1), options: header.map(item => item.label).slice(1), selected: this.props.state.columns.map(c => c - 1) }),\n                    h(Select, { onChange: this.toggleShowAll.bind(this), options: [\n                            this.props.strings.learningTable.showAll,\n                            this.props.strings.learningTable.showOnlySelected,\n                        ], selected: this.props.state.showAll ? 0 : 1 }))) : (''))));\n    }\n}\n","import { h } from 'preact';\nexport function Header({ strings }) {\n    return (h(\"header\", { class: \"small-text\" },\n        strings.header.title,\n        \"\\u00A0\",\n        h(\"a\", { href: \"https://github.com/CSSEGISandData/COVID-19\", target: \"_blank\", title: strings.header.jhuGitHubTitle }, strings.header.jhuSourceDataLink),\n        \"\\u00A0\",\n        strings.header.explorer,\n        \", \",\n        strings.header.usData,\n        \"\\u00A0\",\n        h(\"a\", { href: \"https://github.com/nytimes/covid-19-data\", target: \"_blank\", title: strings.header.usDataTitle }, strings.header.usDataLink),\n        \"\\u00A0 (\",\n        h(\"a\", { href: \"https://github.com/bennett000/covid-19\", target: \"_blank\", title: strings.header.sourceCodeTitle }, strings.header.sourceCodeLink),\n        \"\\u00A0|\\u00A0\",\n        h(\"a\", { href: \"https://github.com/bennett000/covid-19/issues\", target: \"_blank\", title: strings.header.feedbackTitle }, strings.header.feedbackLink),\n        \")\"));\n}\n","import { Component, h } from 'preact';\nimport { flexCol, fullSize, flex, flexItem95, flexItem60, highlight, } from '../constants';\nimport { Menu } from '../components/menu';\nimport { Chart } from '../components/chart';\nimport { ButtonToggle } from '../components/button-toggle';\nimport { SelectMultipleFilter } from '../components/select-multiple-filter';\nimport { filterStates } from '../utility';\nimport { Select } from '../components/select';\nexport class ConfirmedVsRecent extends Component {\n    constructor() {\n        super();\n        this.state = {};\n    }\n    selectShowStates(showOrHide) {\n        this.props.onChange(Object.assign(Object.assign({}, this.props.state), { showStates: parseInt(showOrHide + '', 10) === 0 ? false : true }));\n    }\n    setCountryFilter(filter) {\n        this.props.onChange(Object.assign(Object.assign({}, this.props.state), { countryFilter: filter }));\n    }\n    toggleConfig(v) {\n        this.props.onChange(Object.assign(Object.assign({}, this.props.state), { isConfigOpen: v }));\n    }\n    render() {\n        const classes = this.props.state.isConfigOpen === false &&\n            this.props.countryKeys.length === 0\n            ? ['green']\n            : [];\n        return (h(\"section\", { className: `${fullSize} ${flexCol}` },\n            h(Chart, { flexSize: this.props.state.isConfigOpen ? flexItem60 : flexItem95, options: {\n                    xAxis: { scale: { type: 'logarithmic' } },\n                    xAxis_label_text: this.props.strings.confirmedVsRecent\n                        .confirmedCases,\n                    yAxis: { scale: { type: 'logarithmic' } },\n                    yAxis_label_text: this.props.strings.confirmedVsRecent\n                        .recentCases,\n                    series: this.props.currentSeries,\n                    legend: {\n                        template: '%icon %name',\n                    },\n                }, strings: this.props.strings }),\n            h(\"section\", { className: flex },\n                h(ButtonToggle, { classes: classes, labelTrue: this.props.strings.confirmedVsRecent.enlarge, labelFalse: this.props.strings.confirmedVsRecent.configure, onClick: this.toggleConfig.bind(this), state: this.props.state.isConfigOpen }),\n                h(Menu, { config: this.props.menu })),\n            this.props.state.isConfigOpen ? (h(\"section\", { className: `${flex}` },\n                h(SelectMultipleFilter, { classes: this.props.countryKeys.length === 0 ? [highlight] : [], filter: this.props.state.countryFilter, onUpdateFilter: this.setCountryFilter.bind(this), onChange: this.props.selectCountries, onClear: this.props.clearCountries, onDeselect: this.props.selectCountry, options: this.props.countries.filter(filterStates(this.props.state.showStates, this.props.strings)), selected: this.props.countryKeys }),\n                h(Select, { onChange: this.selectShowStates.bind(this), options: this.props.strings.states, selected: this.props.state.showStates ? 1 : 0 }))) : ('')));\n    }\n}\n","import { Component, h } from 'preact';\nimport { fullSize } from '../constants';\nexport class ChartMap extends Component {\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n        this.base.id = 'chartMapDiv';\n        if (!this.chart) {\n            this.chart = JSC.Chart('chartMapDiv', this.getChartOptions());\n        }\n    }\n    componentWillReceiveProps(props) {\n        if (this.chart) {\n            this.chart.options(this.getChartOptions(props));\n        }\n    }\n    getChartOptions(props = this.props) {\n        return {\n            title_label_text: props.title || '',\n            type: 'map',\n            defaultPoint: {\n                attributes: {\n                    toolTip: '<b>%name</b>',\n                },\n                tooltip: '%toolTip',\n                z: 0,\n            },\n            palette: {\n                pointValue: p => p.options('z'),\n                ranges: props.ranges,\n            },\n            series: props.series,\n        };\n    }\n    render() {\n        return h(\"div\", { className: fullSize });\n    }\n}\n","import { Component, h } from 'preact';\nimport { ChartMap } from '../components/map';\nimport { Menu } from '../components/menu';\nimport { flexCol, fullSize, flex, activeRanges, confirmedRanges, deathRanges, recoveryRanges, usaCode, jhuStartDay, } from '../constants';\nimport { statesToCodes, usStateCodeByName, countriesToContinents, excludeFromMap, } from '../data-maps';\nimport { Select } from '../components/select';\nimport { noop, objReduce } from '@ch1/utility';\nimport { ButtonToggle } from '../components/button-toggle';\nimport { generateDateDictionary, createToolTip } from '../data';\nexport class Geography extends Component {\n    constructor() {\n        super();\n        this.state = {\n            currentSeries: -1,\n            dataSet: 0,\n            isPlaying: false,\n            map: 'world',\n            menuProp: {\n                labels: [],\n                onClick: noop,\n                selected: -1,\n            },\n            timer: 0,\n            title: '',\n        };\n        this.dates = objReduce(generateDateDictionary(), (arr, index, dateString) => {\n            arr[index] = dateString;\n            return arr;\n        }, []);\n        this.getSeries = this.getCountrySeries;\n    }\n    componentWillReceiveProps(props) {\n        this.setState(Object.assign(Object.assign({}, this.state), { menuProp: Object.assign(Object.assign({}, props.menu), { disabled: this.state.isPlaying }) }));\n    }\n    countryFromClick(e) {\n        if (!e) {\n            return null;\n        }\n        if (!e.currentTarget) {\n            return null;\n        }\n        if (!e.currentTarget.currentOptions) {\n            return null;\n        }\n        if (!e.currentTarget.currentOptions.map) {\n            return null;\n        }\n        if (!e.currentTarget.currentOptions.map.properties) {\n            return null;\n        }\n        if (!e.currentTarget.currentOptions.map.properties.mapcode) {\n            return null;\n        }\n        return e.currentTarget.currentOptions.map.properties.mapcode;\n    }\n    continentFromClick(e) {\n        if (!e) {\n            return null;\n        }\n        if (!e.currentTarget) {\n            return null;\n        }\n        if (!e.currentTarget.currentOptions) {\n            return null;\n        }\n        if (!e.currentTarget.currentOptions.map) {\n            return null;\n        }\n        if (!e.currentTarget.currentOptions.map.properties) {\n            return null;\n        }\n        if (!e.currentTarget.currentOptions.map.properties.continent) {\n            return null;\n        }\n        return e.currentTarget.currentOptions.map.properties.continent;\n    }\n    getMapTitle(index) {\n        if (index === undefined) {\n            return new Date(this.dates[this.dates.length - 1]).toLocaleDateString();\n        }\n        return (this.getSeriesName() +\n            ' ' +\n            new Date(this.dates[index]).toLocaleDateString());\n    }\n    getSeriesName() {\n        switch (this.state.dataSet) {\n            case 0:\n                return this.props.strings.geography.mode0;\n            case 1:\n                return this.props.strings.geography.mode1;\n            case 2:\n                return this.props.strings.geography.mode2;\n            case 3:\n                return this.props.strings.geography.mode3;\n            default:\n                return this.props.strings.geography.mode0;\n        }\n    }\n    togglePlay() {\n        const isPlaying = this.state.isPlaying ? false : true;\n        const startDate = new Date(jhuStartDay).getTime();\n        const days = Math.floor((Date.now() - 24 * 60 * 60 * 1000 - startDate) / 1000 / 60 / 60 / 24);\n        this.setState(Object.assign(Object.assign({}, this.state), { isPlaying, currentSeries: isPlaying ? 0 : -1, menuProp: Object.assign(Object.assign({}, this.state.menuProp), { disable: isPlaying }), title: this.getMapTitle(), timer: isPlaying\n                ? setInterval(() => {\n                    if (this.state.currentSeries >= days) {\n                        this.togglePlay();\n                        return;\n                    }\n                    this.setState(Object.assign(Object.assign({}, this.state), { currentSeries: this.state.currentSeries + 1, title: this.getMapTitle(this.state.currentSeries + 1) }));\n                }, 500)\n                : clearInterval(this.state.timer) }));\n    }\n    onMapClick(e) {\n        const c = this.countryFromClick(e);\n        switch (c.toLowerCase()) {\n            case 'au':\n                this.getSeries = this.getStateSeries.bind(this, 'Australia', 'AU');\n                this.setState(Object.assign(Object.assign({}, this.state), { map: 'au' }));\n                break;\n            case 'ca':\n                this.getSeries = this.getStateSeries.bind(this, 'Canada', 'CA');\n                this.setState(Object.assign(Object.assign({}, this.state), { map: 'ca' }));\n                break;\n            case 'cn':\n                this.getSeries = this.getStateSeries.bind(this, 'China', 'CN');\n                this.setState(Object.assign(Object.assign({}, this.state), { map: 'cn' }));\n                break;\n            case usaCode.toLowerCase():\n                this.getSeries = this.getStateSeries.bind(this, usaCode, usaCode);\n                this.setState(Object.assign(Object.assign({}, this.state), { map: usaCode.toLowerCase() }));\n                break;\n            default:\n                this.tryContinent(e);\n                break;\n        }\n    }\n    tryContinent(e) {\n        const continent = this.continentFromClick(e);\n        if (!continent) {\n            return;\n        }\n        let finalContinent = continent;\n        if (continent === 'North America' || continent === 'South America') {\n            finalContinent = 'Americas';\n        }\n        this.getSeries = this.getContinentSeries.bind(this, continent);\n        this.setState(Object.assign(Object.assign({}, this.state), { map: finalContinent }));\n    }\n    getCountrySeries(record = -1) {\n        let max = 0;\n        const s = [];\n        this.props.timeSeries.forEach(ts => {\n            const code = ts.countryCode();\n            if (code === this.props.strings.countries.world) {\n                return null;\n            }\n            if (excludeFromMap[code]) {\n                return null;\n            }\n            if (ts.state()) {\n                if (ts.state() !== this.props.strings.countries.total) {\n                    return null;\n                }\n            }\n            if (ts.locale()) {\n                return null;\n            }\n            if (!ts.population()) {\n                return null;\n            }\n            const value = getFromDataSet(this.state.dataSet, ts, record);\n            if (value < 1) {\n                return null;\n            }\n            if (value > max) {\n                max = value;\n            }\n            s.push({\n                attributes: {\n                    toolTip: createToolTip(ts, this.state.dataSet, ts.counts().length - 1),\n                },\n                map: 'WORLD.' + code.toLowerCase(),\n                z: value,\n            });\n        });\n        return {\n            ranges: getRangesFromDataSet(this.state.dataSet),\n            series: [\n                {\n                    defaultPoint_events_click: this.onMapClick.bind(this),\n                    map: this.state.map,\n                    points: s,\n                },\n            ],\n        };\n    }\n    getContinentSeries(continent, record = -1) {\n        let max = 0;\n        const s = [];\n        this.props.timeSeries.forEach(ts => {\n            const isIn = countriesToContinents[ts.country()];\n            if (!isIn) {\n                return null;\n            }\n            if (isIn !== continent) {\n                if (isIn.indexOf('America') > -1 && continent.indexOf('America') > -1) {\n                }\n                else {\n                    return null;\n                }\n            }\n            if (ts.state()) {\n                if (ts.state() !== this.props.strings.countries.total) {\n                    return null;\n                }\n                if (ts.locale()) {\n                    return null;\n                }\n            }\n            const code = ts.countryCode();\n            if (excludeFromMap[code]) {\n                return null;\n            }\n            const value = getFromDataSet(this.state.dataSet, ts, record);\n            if (value < 1) {\n                return null;\n            }\n            if (value > max) {\n                max = value;\n            }\n            s.push({\n                attributes: {\n                    toolTip: createToolTip(ts, this.state.dataSet, ts.counts().length - 1),\n                },\n                map: code.toLowerCase(),\n                z: value,\n            });\n        });\n        return {\n            ranges: getRangesFromDataSet(this.state.dataSet),\n            series: [\n                {\n                    defaultPoint_events_click: this.onMapClick.bind(this),\n                    map: this.state.map,\n                    points: s,\n                },\n            ],\n        };\n    }\n    getStateSeries(country, countryCode, record = -1) {\n        let max = 0;\n        const s = [];\n        this.props.timeSeries.forEach(ts => {\n            if (ts.country() !== country) {\n                return null;\n            }\n            if (ts.state() === this.props.strings.countries.total) {\n                return null;\n            }\n            if (ts.locale()) {\n                return null;\n            }\n            let stc = statesToCodes[country];\n            if (!stc) {\n                if (countryCode === usaCode) {\n                    stc = usStateCodeByName;\n                }\n                else {\n                    return null;\n                }\n            }\n            const code = ts.stateCode();\n            if (!code) {\n                return null;\n            }\n            if (excludeFromMap[ts.countryCode() + '.' + code]) {\n                return null;\n            }\n            const value = getFromDataSet(this.state.dataSet, ts, record);\n            if (value < 1) {\n                return null;\n            }\n            if (value > max) {\n                max = value;\n            }\n            s.push({\n                attributes: {\n                    toolTip: createToolTip(ts, this.state.dataSet, ts.counts().length - 1),\n                },\n                map: countryCode + '.' + code,\n                z: value,\n            });\n        });\n        return {\n            ranges: getRangesFromDataSet(this.state.dataSet),\n            series: [\n                {\n                    defaultPoint_events_click: this.onMapClick.bind(this),\n                    map: this.state.map,\n                    points: s,\n                },\n            ],\n        };\n    }\n    onChangeDataSet(index) {\n        const int = parseInt(index + '', 10);\n        this.setState(Object.assign(Object.assign({}, this.state), { dataSet: int }));\n    }\n    zoomOut() {\n        this.getSeries = this.getCountrySeries;\n        if (this.state.map !== 'world') {\n            this.setState(Object.assign(Object.assign({}, this.state), { map: 'world' }));\n        }\n    }\n    render() {\n        const { ranges, series } = this.getSeries(this.state.currentSeries);\n        return (h(\"section\", { onClick: this.zoomOut.bind(this), className: `${fullSize} ${flexCol}` },\n            h(ChartMap, { ranges: ranges, series: series, strings: this.props.strings, title: this.state.title }),\n            h(\"section\", { className: flex },\n                h(Select, { onChange: this.onChangeDataSet.bind(this), options: [\n                        this.props.strings.series.activeCases,\n                        this.props.strings.series.confirmedCases,\n                        this.props.strings.series.deaths,\n                        this.props.strings.series.recoveries,\n                    ], selected: this.state.dataSet }),\n                h(ButtonToggle, { labelFalse: this.props.strings.geography.play, labelTrue: this.props.strings.geography.stop, onClick: this.togglePlay.bind(this), state: this.state.isPlaying }),\n                h(Menu, { config: this.state.menuProp }))));\n    }\n}\nfunction getFromDataSet(index, ts, record = -1) {\n    if (record < 0) {\n        switch (index) {\n            case 0:\n                return ts.lastActive();\n            case 1:\n                return ts.lastConfirmed();\n            case 2:\n                return ts.lastDeaths();\n            case 3:\n                return ts.lastRecoveries();\n            default:\n                return ts.lastActive();\n        }\n    }\n    else {\n        switch (index) {\n            case 0:\n                return ts.counts()[record].active || 0;\n            case 1:\n                return ts.counts()[record].confirmed || 0;\n            case 2:\n                return ts.counts()[record].deaths || 0;\n            case 3:\n                return ts.counts()[record].recoveries || 0;\n            default:\n                return ts.counts()[record].active || 0;\n        }\n    }\n}\nfunction getRangesFromDataSet(index) {\n    switch (index) {\n        case 0:\n            return activeRanges;\n        case 1:\n            return confirmedRanges;\n        case 2:\n            return deathRanges;\n        case 3:\n            return recoveryRanges;\n        default:\n            return activeRanges;\n    }\n}\n","import { h } from 'preact';\nexport function AboutList({ title, list, }) {\n    return (h(\"section\", null,\n        h(\"h3\", null, title),\n        h(\"ul\", null, list.map(d => (h(\"li\", null,\n            h(\"strong\", null,\n                d.name,\n                \":\"),\n            \"\\u00A0\",\n            typeof d.description === 'function'\n                ? d.description()\n                : d.description))))));\n}\n","import { Component, h } from 'preact';\nimport { fullSize } from '../constants';\nimport { Menu } from '../components/menu';\nimport { AboutList } from '../components/about-list';\nexport class About extends Component {\n    constructor() {\n        super();\n        this.state = {};\n    }\n    render() {\n        const definitionsSeries = [\n            {\n                name: this.props.strings.series.activeCases,\n                description: this.props.strings.descriptions.series.activeCases,\n            },\n            {\n                name: this.props.strings.series.confirmedCases,\n                description: this.props.strings.descriptions.series.confirmedCases,\n            },\n            {\n                name: this.props.strings.series.deaths,\n                description: this.props.strings.descriptions.series.deaths,\n            },\n            {\n                name: this.props.strings.series.recoveries,\n                description: this.props.strings.descriptions.series.recoveries,\n            },\n            {\n                name: this.props.strings.series.estimatedActiveCases,\n                description: () => (h(\"span\", null,\n                    this.props.strings.descriptions.series.estimatedActiveCases.part1,\n                    \"\\u00A0\",\n                    h(\"a\", { href: this.props.strings.descriptions.series.estimatedActiveCases.url, target: \"_blank\" }, this.props.strings.descriptions.series.estimatedActiveCases.link),\n                    ' ',\n                    this.props.strings.descriptions.series.estimatedActiveCases.part2)),\n            },\n            {\n                name: this.props.strings.descriptions.series.projectionSeir.title,\n                description: () => (h(\"span\", null,\n                    this.props.strings.descriptions.series.projectionSeir.part1,\n                    \"\\u00A0\",\n                    h(\"a\", { href: this.props.strings.descriptions.series.projectionSeir.url, target: \"_blank\" }, this.props.strings.descriptions.series.projectionSeir.link),\n                    ' ',\n                    this.props.strings.descriptions.series.projectionSeir.part2)),\n            },\n        ];\n        const definitionsMetrics = [\n            {\n                name: this.props.strings.metrics.byValue,\n                description: this.props.strings.descriptions.metrics.byValue,\n            },\n            {\n                name: this.props.strings.metrics.byPercent,\n                description: this.props.strings.descriptions.metrics.byPercet,\n            },\n        ];\n        const definitionsModes = [\n            {\n                name: this.props.strings.modes.byDate,\n                description: this.props.strings.descriptions.modes.byDate,\n            },\n            {\n                name: this.props.strings.modes.byFirst,\n                description: this.props.strings.descriptions.modes.byFirst,\n            },\n            {\n                name: this.props.strings.modes.byFirst100,\n                description: this.props.strings.descriptions.modes.byFirst100,\n            },\n        ];\n        const definitionsScales = [\n            {\n                name: this.props.strings.scaleTypes.linear,\n                description: this.props.strings.descriptions.scales.linear,\n            },\n            {\n                name: this.props.strings.scaleTypes.logarithmic,\n                description: this.props.strings.descriptions.scales.logarithmic,\n            },\n        ];\n        return (h(\"section\", { className: `${fullSize}` },\n            h(AboutList, { title: this.props.strings.descriptions.titles.series, list: definitionsSeries }),\n            h(AboutList, { title: this.props.strings.descriptions.titles.modes, list: definitionsModes }),\n            h(AboutList, { title: this.props.strings.descriptions.titles.scales, list: definitionsScales }),\n            h(AboutList, { title: this.props.strings.descriptions.titles.metrics, list: definitionsMetrics }),\n            h(Menu, { config: this.props.menu })));\n    }\n}\n","import Router, { route } from 'preact-router';\nimport { Component, h, render as preactRender } from 'preact';\nimport { TimeVsCount } from './feature-time-vs-counts/time-vs-counts';\nimport { createState, loadState, saveState } from './state';\nimport { selectData, fetchData } from './data';\nimport { log } from './utility';\nimport { LearningTable } from './feature-learning-table/learning-table';\nimport { Header } from './components/header';\nimport { fullSize, flexCol } from './constants';\nimport { ConfirmedVsRecent } from './feature-confirmed-vs-recent/confirmed-vs-recent';\nimport { Geography } from './feature-geography/geography';\nimport { About } from './feature-about/about';\nexport class App extends Component {\n    constructor(props) {\n        super();\n        let state = loadState(props.strings);\n        if (!state) {\n            log(props.strings.app.log.noState);\n            state = createState(props.strings);\n        }\n        this.state = state;\n        this.selectAndUpdate();\n        this.menu = {\n            labels: props.strings.app.menu.map(s => s.name),\n            onClick: (selected) => {\n                const routePath = this.props.strings.app.menu[selected].route ||\n                    this.props.strings.app.menu[0].route;\n                this.setState(Object.assign(Object.assign({}, this.state), { currentSeries: [], routePath }));\n                this.menu.selected = selected;\n                route(routePath);\n                this.selectAndUpdate();\n            },\n            selected: props.strings.app.menu.reduce((s, n, i) => {\n                if (n.route === this.state.routePath) {\n                    return i;\n                }\n                return s;\n            }, 0),\n        };\n    }\n    updateSelectState({ countries, series, }) {\n        this.setState(Object.assign(Object.assign({}, this.state), { countries, currentSeries: series }));\n    }\n    selectAndUpdate() {\n        this.state.dataPromise\n            .then(({ timeSeries }) => {\n            this.setState(Object.assign(Object.assign({}, this.state), { data: timeSeries }));\n            return selectData(this.props.cache, this.state);\n        })\n            .then(this.updateSelectState.bind(this))\n            .then(() => saveState(this.state));\n    }\n    timeVsCounts(tvc) {\n        this.setState(Object.assign(Object.assign({}, this.state), { timeVsCountsState: tvc }));\n        this.selectAndUpdate();\n    }\n    confirmedVsRecent(cvr) {\n        this.setState(Object.assign(Object.assign({}, this.state), { confirmedVsRecentState: cvr }));\n        this.selectAndUpdate();\n    }\n    tableState(tableState) {\n        this.setState(Object.assign(Object.assign({}, this.state), { tableState }));\n        this.selectAndUpdate();\n    }\n    reload() {\n        this.props.reset();\n        this.setState(Object.assign(Object.assign({}, this.state), { dataPromise: fetchData(this.props.strings).then(d => {\n                this.selectAndUpdate();\n                return d;\n            }) }));\n    }\n    clearCountries() {\n        this.setState(Object.assign(Object.assign({}, this.state), { countryKeys: [] }));\n        this.selectAndUpdate();\n    }\n    selectCountry(countryKey) {\n        if (this.state.countryKeys.indexOf(countryKey) > -1) {\n            this.setState(Object.assign(Object.assign({}, this.state), { countryKeys: this.state.countryKeys.filter(i => i !== countryKey) }));\n        }\n        else {\n            this.setState(Object.assign(Object.assign({}, this.state), { countryKeys: this.state.countryKeys.concat([countryKey]) }));\n        }\n        this.selectAndUpdate();\n    }\n    selectCountries(countryKeys) {\n        this.setState(Object.assign(Object.assign({}, this.state), { countryKeys }));\n        this.selectAndUpdate();\n    }\n    render() {\n        return (h(\"div\", { className: `${fullSize} ${flexCol}` },\n            h(Header, { strings: this.props.strings }),\n            h(Router, null,\n                h(TimeVsCount, { path: this.props.strings.app.menu[0].route, clearCountries: this.clearCountries.bind(this), countries: this.state.countries, countryKeys: this.state.countryKeys, currentSeries: this.state.currentSeries, menu: this.menu, onChange: this.timeVsCounts.bind(this), key: \"0\", reload: this.reload.bind(this), selectCountry: this.selectCountry.bind(this), selectCountries: this.selectCountries.bind(this), state: this.state.timeVsCountsState, strings: this.props.strings }),\n                h(ConfirmedVsRecent, { path: this.props.strings.app.menu[1].route, clearCountries: this.clearCountries.bind(this), countries: this.state.countries, countryKeys: this.state.countryKeys, currentSeries: this.state.currentSeries, key: \"1\", menu: this.menu, onChange: this.confirmedVsRecent.bind(this), selectCountry: this.selectCountry.bind(this), selectCountries: this.selectCountries.bind(this), state: this.state.confirmedVsRecentState, strings: this.props.strings }),\n                h(LearningTable, { path: this.props.strings.app.menu[2].route, countryKeys: this.state.countryKeys, key: \"2\", onChange: this.tableState.bind(this), menu: this.menu, state: this.state.tableState, selectCountry: this.selectCountry.bind(this), strings: this.props.strings, timeSeries: this.state.data }),\n                h(Geography, { path: this.props.strings.app.menu[3].route, key: \"3\", menu: this.menu, strings: this.props.strings, timeSeries: this.state.data }),\n                h(About, { path: this.props.strings.app.menu[4].route, key: \"4\", strings: this.props.strings, menu: this.menu }))));\n    }\n}\nexport function render(root, strings) {\n    let cache = {};\n    preactRender(h(App, { cache: cache, reset: () => (cache = {}), strings: strings }), root);\n}\n","import dl from '../i18n/en.json';\nimport { objReduce, isString, noop } from '@ch1/utility';\nexport const defaultLanguage = convertJsonToInjectedJson(dl);\nexport function getLanguage(lang) {\n    return import(`../i18n/${lang}.json`).then(s => convertJsonToInjectedJson(s));\n}\nfunction convertJsonToInjectedJson(strings) {\n    return objReduce(strings, (s, node, key) => {\n        if (isString(node)) {\n            Object.defineProperty(s, key, {\n                get: () => node,\n                set: noop,\n            });\n        }\n        else {\n            s[key] = convertJsonToInjectedJson(node);\n        }\n        s[key] = node;\n        return s;\n    }, {});\n}\n","import { render } from './app';\nimport { fullSize } from './constants';\nimport { getSavedLanguage, saveLanguage } from './state';\nimport { log } from './utility';\nimport { defaultLanguage, getLanguage } from './i18n';\nmain().catch(e => log(e.message));\nfunction main() {\n    const lang = getSavedLanguage() || 'en';\n    return getLanguage(lang)\n        .then(strings => {\n        const element = window.document.createElement('section');\n        element.className = `${fullSize}`;\n        if (!element) {\n            throw new Error(strings.errors.bootstrap);\n        }\n        window.document.body.appendChild(element);\n        render(element, strings);\n    })\n        .catch(e => {\n        log(defaultLanguage.i18n.part1, lang, defaultLanguage.i18n.part2, `(${e.message})`);\n        saveLanguage('');\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                main()\n                    .then(resolve)\n                    .catch(reject);\n            }, 100);\n        });\n    });\n}\n"],"sourceRoot":""}