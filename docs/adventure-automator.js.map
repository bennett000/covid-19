{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","defaultCountries","modes","urls","saveState","state","window","localStorage","setItem","JSON","stringify","assign","dataPromise","undefined","html","selectData","startDate","Date","then","dataSets","points","series","useDays","JSC","Chart","xAxis_label_text","xAxis","scaleType","customTicks","month","label_text","week","legend","template","drawCurve","dataSetIndexes","reduce","dataSetIndex","si","country","dp","confirmed","selectDataPointByConfirmed","countryIndexes","indexOf","map","x","filter","Boolean","selectDataPointByDate","selectDataPointByMode","push","catch","console","log","min","newX","j","index","y","fetchData","Promise","all","url","fetch","unboxResponses","convertToCsv","alphabetize","sumRegions","extractCountries","csvToPoints","setCountryOptions","data","countries","selectCountry","innerHTML","createHtmlOptions","forEach","node","appendChild","arr","selected","el","opt","document","createElement","Array","isArray","selectedOptionsToArray","options","results","length","parseInt","dataSet","sum","count","resetSum","row","slice","concat","totals","incrementSum","responses","text","strings","split","rowIndex","replaceCommasInQuotes","input","test","charAt","substr","replace","titles","shift","sort","a","b","countryArr","chartType","getChartTypeFromIndex","container","controls","className","selectMode","createSelectModeComponent","inputStart","type","multiple","createSelectDataComponent","reloadData","chart","sibling","id","insertBefore","createChartComponent","body","createHtml","item","getItem","parse","e","loadState","createState","addEventListener","target","bindControls","main"],"mappings":"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","file":"adventure-automator.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const fullSize = 'width: 100%; height: 400px;';\nconst defaultDataset = 0;\nconst defaultCountries = [1, 43, 119, 414, 426];\nconst defaultMode = 2;\nconst defaultStart = '2019-12-26';\nconst modes = ['By date', 'By first confirmed', 'By first 100 confirmed'];\nconst totalString = 'Total';\nconst urls = [\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv',\n];\nmain();\nfunction createState(html) {\n    return {\n        dataPromise: fetchData().then(setCountryOptions(html)),\n        dataSetIndexes: [defaultDataset],\n        countryIndexes: defaultCountries,\n        html,\n        mode: defaultMode,\n        startDate: defaultStart,\n    };\n}\nfunction saveState(state) {\n    if (window.localStorage) {\n        window.localStorage.setItem('state', JSON.stringify(Object.assign(Object.assign({}, state), { dataPromise: undefined, html: undefined })));\n    }\n}\nfunction loadState(html) {\n    if (window.localStorage) {\n        const item = window.localStorage.getItem('state');\n        if (item) {\n            try {\n                return Object.assign(Object.assign({}, JSON.parse(item)), { dataPromise: fetchData().then(setCountryOptions(html)), html });\n            }\n            catch (e) {\n                // fail over\n            }\n        }\n    }\n    return null;\n}\nfunction main() {\n    const html = createHtml();\n    let state = loadState(html);\n    if (!state) {\n        state = createState(html);\n    }\n    bindControls(state);\n    selectData(state);\n}\nfunction bindControls(state) {\n    state.html.reloadData.addEventListener('click', () => {\n        state.dataPromise = fetchData().then(setCountryOptions(state.html));\n        selectData(state);\n        saveState(state);\n    });\n    const changeCountry = e => {\n        state.countryIndexes = selectedOptionsToArray(e.target.options);\n        selectData(state);\n        saveState(state);\n    };\n    const changeData = e => {\n        state.dataSetIndexes = selectedOptionsToArray(e.target.options);\n        selectData(state);\n        saveState(state);\n    };\n    const changeDate = e => {\n        state.startDate = e.target.value;\n        selectData(state);\n        saveState(state);\n    };\n    const changeMode = e => {\n        state.mode = parseInt(e.target.value, 10);\n        selectData(state);\n        saveState(state);\n    };\n    state.html.inputStart.addEventListener('change', changeDate);\n    state.html.selectCountry.addEventListener('change', changeCountry);\n    state.html.selectData.addEventListener('change', changeData);\n    state.html.selectMode.addEventListener('change', changeMode);\n}\nfunction selectData(state) {\n    state.startDate = new Date(state.startDate);\n    state.dataPromise\n        .then(({ dataSets, points }) => {\n        const series = state.dataSetIndexes.reduce((s, dataSetIndex) => {\n            return points[dataSetIndex].reduce((si, country, i) => {\n                const dp = selectDataPointByMode(state, country, i + 1, dataSets[0][i + 1]);\n                if (dp) {\n                    si.push(dp);\n                }\n                return si;\n            }, s);\n        }, []);\n        drawCurve(series, state.html, state.mode === 0 ? false : true);\n    })\n        .catch(console.log.bind(console));\n}\nfunction selectDataPointByMode(state, country, i, confirmed) {\n    switch (state.mode) {\n        case 1:\n            return selectDataPointByConfirmed(state, country, i, confirmed, 1);\n        case 2:\n            return selectDataPointByConfirmed(state, country, i, confirmed, 100);\n        default:\n            return selectDataPointByDate(state, country, i);\n    }\n}\nfunction selectDataPointByDate(state, country, i) {\n    if (state.countryIndexes.indexOf(i) > -1) {\n        return {\n            name: country.name,\n            points: country.points\n                .map(p => {\n                if (p.x > state.startDate) {\n                    return p;\n                }\n                return null;\n            })\n                .filter(Boolean),\n        };\n    }\n}\nfunction selectDataPointByConfirmed(state, country, i, confirmed, min) {\n    if (state.countryIndexes.indexOf(i) > -1) {\n        let newX = 0;\n        return {\n            name: country.name,\n            points: country.points\n                .map((p, j) => {\n                if (p.x > state.startDate) {\n                    const y = confirmed[p.index];\n                    if (y >= min) {\n                        const x = newX;\n                        newX += 1;\n                        return {\n                            x,\n                            y: p.y,\n                        };\n                    }\n                    return null;\n                }\n                return null;\n            })\n                .filter(Boolean),\n        };\n    }\n}\nfunction fetchData() {\n    return (Promise.all(urls.map(url => JSC.fetch(url)))\n        .then(unboxResponses)\n        .then(convertToCsv)\n        .then(alphabetize)\n        .then(sumRegions)\n        // re alphabetize to integrate countries\n        .then(alphabetize)\n        .then(extractCountries)\n        .then(csvToPoints));\n}\nfunction createHtml() {\n    const container = window.document.createElement('div');\n    const controls = window.document.createElement('section');\n    controls.className = 'controls';\n    container.appendChild(controls);\n    const selectMode = createSelectModeComponent(controls);\n    const inputStart = window.document.createElement('input');\n    inputStart.type = 'date';\n    inputStart.value = defaultStart;\n    controls.appendChild(inputStart);\n    const selectData = createSelectDataComponent(controls);\n    const selectCountry = window.document.createElement('select');\n    selectCountry.multiple = true;\n    selectCountry.className = 'select-country';\n    controls.appendChild(selectCountry);\n    const reloadData = window.document.createElement('button');\n    reloadData.innerHTML = 'Reload Data';\n    reloadData.className = 'green';\n    controls.appendChild(reloadData);\n    const chart = createChartComponent(container, controls);\n    window.document.body.appendChild(container);\n    return {\n        chart,\n        container,\n        controls,\n        inputStart,\n        selectCountry,\n        selectData,\n        selectMode,\n        reloadData,\n    };\n}\nfunction setCountryOptions(html) {\n    return data => {\n        const { countries } = data;\n        html.selectCountry.innerHTML = '';\n        const opts = createHtmlOptions(countries, defaultCountries).forEach(node => {\n            html.selectCountry.appendChild(node);\n        });\n        return data;\n    };\n}\nfunction createSelectDataComponent(container) {\n    const selectData = window.document.createElement('select');\n    selectData.multiple = true;\n    selectData.className = 'select-data';\n    createHtmlOptions(['Confirmed Cases', 'Deaths', 'Recoveries'], defaultDataset).forEach(node => {\n        selectData.appendChild(node);\n    });\n    container.appendChild(selectData);\n    return selectData;\n}\nfunction createSelectModeComponent(controls) {\n    const selectMode = window.document.createElement('select');\n    createHtmlOptions(modes, defaultMode).forEach(node => {\n        selectMode.appendChild(node);\n    });\n    controls.appendChild(selectMode);\n    return selectMode;\n}\nfunction createChartComponent(container, sibling) {\n    const chart = window.document.createElement('div');\n    chart.id = 'chartDiv';\n    container.insertBefore(chart, sibling);\n    return chart;\n}\nfunction createHtmlOptions(arr, selected) {\n    return arr.map((el, i) => {\n        const opt = window.document.createElement('option');\n        if (typeof el === 'object') {\n            opt.value = el.index;\n            opt.innerHTML = el.name;\n            if (Array.isArray(selected)) {\n                if (selected.indexOf(el.index) > -1) {\n                    opt.selected = true;\n                }\n            }\n            else {\n                if (el.index === selected) {\n                    opt.selected = true;\n                }\n            }\n        }\n        else {\n            opt.value = i;\n            opt.innerHTML = el;\n            if (Array.isArray(selected)) {\n                if (selected.indexOf(i) > -1) {\n                    opt.selected = true;\n                }\n            }\n            else {\n                if (i === selected) {\n                    opt.selected = true;\n                }\n            }\n        }\n        return opt;\n    });\n}\nfunction selectedOptionsToArray(options) {\n    let results = [];\n    for (let i = 0; i < options.length; i += 1) {\n        const opt = options[i];\n        if (opt.selected) {\n            results.push(parseInt(opt.value, 10));\n        }\n    }\n    return results;\n}\nfunction sumRegions(dataSets) {\n    // must be used after alphabetizing\n    return dataSets.map(dataSet => {\n        let sum = [];\n        let count = 0;\n        const resetSum = row => {\n            sum = row.slice(0);\n            sum[0] = totalString;\n        };\n        const incrementSum = row => {\n            for (let i = 4; i < row.length; i += 1) {\n                sum[i] += row[i];\n            }\n        };\n        return dataSet.concat(dataSet.reduce((totals, row, i, arr) => {\n            if (i === 0) {\n                return totals;\n            }\n            if (i === 1) {\n                resetSum(row);\n                return totals;\n            }\n            if (arr[i - 1][1] === row[1]) {\n                count += 1;\n                incrementSum(row);\n                return totals;\n            }\n            else {\n                if (count > 1) {\n                    totals.push(sum);\n                }\n                count = 0;\n                resetSum(row);\n                return totals;\n            }\n        }, []));\n    });\n}\nfunction unboxResponses(responses) {\n    return Promise.all(responses.map(r => r.text()));\n}\nfunction replaceCommasInQuotes(input) {\n    if (/\"[A-Za-z0-9\\s\\.']+(,)/.test(input)) {\n        if (input.charAt(0) === ',') {\n            const index = input.indexOf(',', 1);\n            return input.substr(0, index) + ';' + input.substr(index + 1);\n        }\n        return replaceCommasInQuotes(input.replace(',', ';'));\n    }\n    return input;\n}\nfunction convertToCsv(strings) {\n    return strings.map(s => s.split('\\n').map((row, rowIndex) => replaceCommasInQuotes(row)\n        .split(',')\n        .map((el, i) => {\n        if (i === 0) {\n            return el;\n        }\n        if (i === 1) {\n            return el;\n        }\n        if (rowIndex === 0) {\n            if (i > 3) {\n                return new Date(el);\n            }\n            return el;\n        }\n        if (i > 3) {\n            return parseInt(el, 10);\n        }\n        return el;\n    })));\n}\nfunction alphabetize(dataSets) {\n    return dataSets.map(dataSet => {\n        const titles = dataSet.shift();\n        dataSet.sort((a, b) => {\n            if (a[1] < b[1]) {\n                return -1;\n            }\n            if (a[1] > b[1]) {\n                return 1;\n            }\n            if (a[0] < b[0]) {\n                return -1;\n            }\n            if (a[0] > b[0]) {\n                return 1;\n            }\n            return 0;\n        });\n        return [titles].concat(dataSet);\n    });\n}\nfunction extractCountries(dataSets) {\n    const countries = dataSets[0].reduce((countryArr, row, i) => {\n        if (i === 0) {\n            return countryArr;\n        }\n        if (row.length < 5) {\n            return countryArr;\n        }\n        if (row[0] === totalString) {\n            countryArr.push({ index: i, name: row[1] });\n            return countryArr;\n        }\n        if (!row[0]) {\n            countryArr.push({ index: i, name: row[1] });\n        }\n        return countryArr;\n    }, []);\n    return { countries, dataSets };\n}\nfunction getChartTypeFromIndex(index) {\n    switch (index) {\n        case 0:\n            return '😷';\n        case 1:\n            return '☠';\n        default:\n            return '😊';\n    }\n}\nfunction csvToPoints({ countries, dataSets }) {\n    const points = dataSets.map((dataSet, dataSetIndex) => {\n        const chartType = getChartTypeFromIndex(dataSetIndex);\n        const series = [];\n        for (let i = 1; i < dataSet.length; i += 1) {\n            let name = '';\n            let points = [];\n            let row = dataSet[i];\n            for (let j = 0; j < row.length; j += 1) {\n                if (j === 1) {\n                    name = chartType + ' ' + row[1] + ', ' + row[0];\n                }\n                if (j > 3) {\n                    if (!row[j] || row[j] !== row[j]) {\n                        continue;\n                    }\n                    points.push({\n                        index: j,\n                        x: new Date(dataSet[0][j]),\n                        y: row[j],\n                    });\n                }\n            }\n            series.push({\n                name,\n                points,\n            });\n        }\n        return series;\n    });\n    return { countries, dataSets, points };\n}\nfunction drawCurve(series, html, useDays) {\n    JSC.Chart('chartDiv', {\n        xAxis_label_text: useDays ? 'Day' : undefined,\n        xAxis: {\n            scaleType: 'time',\n            customTicks: [\n                {\n                    // A tick for every month.\n                    value: {\n                        month: '*',\n                    },\n                    label_text: '%min',\n                },\n                {\n                    // every month\n                    value: { week: '*' },\n                    label_text: '%min',\n                },\n            ],\n        },\n        legend: {\n            template: '%icon %name',\n        },\n        series,\n    });\n}\nfunction logp(i) {\n    console.log(i.map(n => n.text()));\n    return i;\n}\n"],"sourceRoot":""}